Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    main.o(.text.Init_Thread) refers to main.o(.text.Thread) for Thread
    main.o(.text.Init_Thread) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.Init_Thread) refers to main.o(.bss.tid_Thread) for tid_Thread
    main.o(.ARM.exidx.text.Init_Thread) refers to main.o(.text.Init_Thread) for [Anonymous Symbol]
    main.o(.text.Thread) refers to led_mcb4300.o(.text.LED_Initialize) for LED_Initialize
    main.o(.text.Thread) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(.text.Thread) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.Thread) refers to printf.o(.text) for printf
    main.o(.text.Thread) refers to led_mcb4300.o(.text.LED_Off) for LED_Off
    main.o(.text.Thread) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(.text.Thread) refers to led_mcb4300.o(.text.LED_On) for LED_On
    main.o(.ARM.exidx.text.Thread) refers to main.o(.text.Thread) for [Anonymous Symbol]
    main.o(.text.Init_TIMER0) refers to main.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    main.o(.ARM.exidx.text.Init_TIMER0) refers to main.o(.text.Init_TIMER0) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to main.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    main.o(.text.increment) refers to main.o(.bss.x) for x
    main.o(.ARM.exidx.text.increment) refers to main.o(.text.increment) for [Anonymous Symbol]
    main.o(.text.TIMER0_IRQHandler) refers to main.o(.text.increment) for increment
    main.o(.ARM.exidx.text.TIMER0_IRQHandler) refers to main.o(.text.TIMER0_IRQHandler) for [Anonymous Symbol]
    main.o(.text.main) refers to system_lpc43xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to main.o(.text.app_main) for app_main
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to main.o(.text.Init_TIMER0) for Init_TIMER0
    main.o(.text.main) refers to main.o(.text.Init_Thread) for Init_Thread
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.app_main) refers to main.o(.text.app_main) for [Anonymous Symbol]
    led_mcb4300.o(.text.LED_Initialize) refers to gpio_lpc43xx.o(.text.GPIO_PortClock) for GPIO_PortClock
    led_mcb4300.o(.text.LED_Initialize) refers to led_mcb4300.o(.rodata.LED_PIN) for LED_PIN
    led_mcb4300.o(.text.LED_Initialize) refers to scu_lpc43xx.o(.text.SCU_PinConfigure) for SCU_PinConfigure
    led_mcb4300.o(.text.LED_Initialize) refers to led_mcb4300.o(.rodata.LED_GPIO) for LED_GPIO
    led_mcb4300.o(.text.LED_Initialize) refers to gpio_lpc43xx.o(.text.GPIO_SetDir) for GPIO_SetDir
    led_mcb4300.o(.text.LED_Initialize) refers to gpio_lpc43xx.o(.text.GPIO_PinWrite) for GPIO_PinWrite
    led_mcb4300.o(.ARM.exidx.text.LED_Initialize) refers to led_mcb4300.o(.text.LED_Initialize) for [Anonymous Symbol]
    led_mcb4300.o(.text.LED_Uninitialize) refers to led_mcb4300.o(.rodata.LED_PIN) for LED_PIN
    led_mcb4300.o(.text.LED_Uninitialize) refers to scu_lpc43xx.o(.text.SCU_PinConfigure) for SCU_PinConfigure
    led_mcb4300.o(.ARM.exidx.text.LED_Uninitialize) refers to led_mcb4300.o(.text.LED_Uninitialize) for [Anonymous Symbol]
    led_mcb4300.o(.text.LED_On) refers to led_mcb4300.o(.rodata.LED_GPIO) for LED_GPIO
    led_mcb4300.o(.text.LED_On) refers to gpio_lpc43xx.o(.text.GPIO_PinWrite) for GPIO_PinWrite
    led_mcb4300.o(.ARM.exidx.text.LED_On) refers to led_mcb4300.o(.text.LED_On) for [Anonymous Symbol]
    led_mcb4300.o(.text.LED_Off) refers to led_mcb4300.o(.rodata.LED_GPIO) for LED_GPIO
    led_mcb4300.o(.text.LED_Off) refers to gpio_lpc43xx.o(.text.GPIO_PinWrite) for GPIO_PinWrite
    led_mcb4300.o(.ARM.exidx.text.LED_Off) refers to led_mcb4300.o(.text.LED_Off) for [Anonymous Symbol]
    led_mcb4300.o(.text.LED_SetOut) refers to led_mcb4300.o(.text.LED_On) for LED_On
    led_mcb4300.o(.text.LED_SetOut) refers to led_mcb4300.o(.text.LED_Off) for LED_Off
    led_mcb4300.o(.ARM.exidx.text.LED_SetOut) refers to led_mcb4300.o(.text.LED_SetOut) for [Anonymous Symbol]
    led_mcb4300.o(.ARM.exidx.text.LED_GetCount) refers to led_mcb4300.o(.text.LED_GetCount) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    rtx_lib.o(.text._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init) refers to rtx_lib.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    rtx_lib.o(.text.$Sub$$_fp_init) refers to fpinit.o(x$fpl$fpinit) for $Super$$_fp_init
    rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init) refers to rtx_lib.o(.text.$Sub$$_fp_init) for [Anonymous Symbol]
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_lib.o(.bss.os.libspace) for os_libspace_id
    rtx_lib.o(.text.__user_perthread_libspace) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace) refers to rtx_lib.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active) for os_kernel_is_active.os_kernel_active
    rtx_lib.o(.text.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(.ARM.exidx.text.os_kernel_is_active) refers to rtx_lib.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(.text._mutex_initialize) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_lib.o(.ARM.exidx.text._mutex_initialize) refers to rtx_lib.o(.text._mutex_initialize) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_acquire) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(.ARM.exidx.text._mutex_acquire) refers to rtx_lib.o(.text._mutex_acquire) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_release) refers to rtx_lib.o(.text.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(.text._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(.ARM.exidx.text._mutex_release) refers to rtx_lib.o(.text._mutex_release) for [Anonymous Symbol]
    rtx_lib.o(.text._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(.ARM.exidx.text._mutex_free) refers to rtx_lib.o(.text._mutex_free) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    retarget_io.o(.ARM.exidx.text.ITM_SendChar) refers to retarget_io.o(.text.ITM_SendChar) for [Anonymous Symbol]
    retarget_io.o(.text.ITM_ReceiveChar) refers to retarget_io.o(.data.ITM_RxBuffer) for ITM_RxBuffer
    retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar) refers to retarget_io.o(.text.ITM_ReceiveChar) for [Anonymous Symbol]
    retarget_io.o(.text._sys_open) refers to retarget_io.o(.rodata.str1.1) for .L.str
    retarget_io.o(.text._sys_open) refers to strcmpv7em.o(.text) for strcmp
    retarget_io.o(.ARM.exidx.text._sys_open) refers to retarget_io.o(.text._sys_open) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_close) refers to retarget_io.o(.text._sys_close) for [Anonymous Symbol]
    retarget_io.o(.text._sys_write) refers to retarget_io.o(.text.stdout_putchar) for stdout_putchar
    retarget_io.o(.ARM.exidx.text._sys_write) refers to retarget_io.o(.text._sys_write) for [Anonymous Symbol]
    retarget_io.o(.text.stdout_putchar) refers to retarget_io.o(.text.ITM_SendChar) for ITM_SendChar
    retarget_io.o(.ARM.exidx.text.stdout_putchar) refers to retarget_io.o(.text.stdout_putchar) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_read) refers to retarget_io.o(.text._sys_read) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_istty) refers to retarget_io.o(.text._sys_istty) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_seek) refers to retarget_io.o(.text._sys_seek) for [Anonymous Symbol]
    retarget_io.o(.ARM.exidx.text._sys_flen) refers to retarget_io.o(.text._sys_flen) for [Anonymous Symbol]
    gpio_lpc43xx.o(.text.GPIO_PortClock) refers to system_lpc43xx.o(.data.SystemCoreClock) for SystemCoreClock
    gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PortClock) refers to gpio_lpc43xx.o(.text.GPIO_PortClock) for [Anonymous Symbol]
    gpio_lpc43xx.o(.ARM.exidx.text.GPIO_SetDir) refers to gpio_lpc43xx.o(.text.GPIO_SetDir) for [Anonymous Symbol]
    gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PinWrite) refers to gpio_lpc43xx.o(.text.GPIO_PinWrite) for [Anonymous Symbol]
    gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PinRead) refers to gpio_lpc43xx.o(.text.GPIO_PinRead) for [Anonymous Symbol]
    gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PortWrite) refers to gpio_lpc43xx.o(.text.GPIO_PortWrite) for [Anonymous Symbol]
    gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PortRead) refers to gpio_lpc43xx.o(.text.GPIO_PortRead) for [Anonymous Symbol]
    scu_lpc43xx.o(.ARM.exidx.text.SCU_PinConfigure) refers to scu_lpc43xx.o(.text.SCU_PinConfigure) for [Anonymous Symbol]
    scu_lpc43xx.o(.ARM.exidx.text.SCU_CLK_PinConfigure) refers to scu_lpc43xx.o(.text.SCU_CLK_PinConfigure) for [Anonymous Symbol]
    scu_lpc43xx.o(.ARM.exidx.text.SCU_USB1_PinConfigure) refers to scu_lpc43xx.o(.text.SCU_USB1_PinConfigure) for [Anonymous Symbol]
    scu_lpc43xx.o(.ARM.exidx.text.SCU_I2C_PinConfigure) refers to scu_lpc43xx.o(.text.SCU_I2C_PinConfigure) for [Anonymous Symbol]
    scu_lpc43xx.o(.ARM.exidx.text.SCU_ADC_ChannelPinConfigure) refers to scu_lpc43xx.o(.text.SCU_ADC_ChannelPinConfigure) for [Anonymous Symbol]
    scu_lpc43xx.o(.ARM.exidx.text.SCU_DAC_PinConfigure) refers to scu_lpc43xx.o(.text.SCU_DAC_PinConfigure) for [Anonymous Symbol]
    scu_lpc43xx.o(.ARM.exidx.text.SCU_PinInterruptSourceSelect) refers to scu_lpc43xx.o(.text.SCU_PinInterruptSourceSelect) for [Anonymous Symbol]
    startup_lpc43xx.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc43xx.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc43xx.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc43xx.o(RESET) refers to startup_lpc43xx.o(STACK) for __initial_sp
    startup_lpc43xx.o(RESET) refers to startup_lpc43xx.o(.text) for Reset_Handler
    startup_lpc43xx.o(RESET) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_lpc43xx.o(RESET) refers to main.o(.text.TIMER0_IRQHandler) for TIMER0_IRQHandler
    startup_lpc43xx.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_lpc43xx.o(.text) refers to system_lpc43xx.o(.text.SystemInit) for SystemInit
    startup_lpc43xx.o(.text) refers to __main.o(!!!main) for __main
    startup_lpc43xx.o(.text) refers to startup_lpc43xx.o(HEAP) for Heap_Mem
    startup_lpc43xx.o(.text) refers to startup_lpc43xx.o(STACK) for Stack_Mem
    system_lpc43xx.o(.ARM.exidx.text.MeasureFreq) refers to system_lpc43xx.o(.text.MeasureFreq) for [Anonymous Symbol]
    system_lpc43xx.o(.text.GetClockFreq) refers to system_lpc43xx.o(.text.GetPLL1Param) for GetPLL1Param
    system_lpc43xx.o(.text.GetClockFreq) refers to system_lpc43xx.o(.text.GetClkSel) for GetClkSel
    system_lpc43xx.o(.ARM.exidx.text.GetClockFreq) refers to system_lpc43xx.o(.text.GetClockFreq) for [Anonymous Symbol]
    system_lpc43xx.o(.ARM.exidx.text.GetPLL1Param) refers to system_lpc43xx.o(.text.GetPLL1Param) for [Anonymous Symbol]
    system_lpc43xx.o(.ARM.exidx.text.GetClkSel) refers to system_lpc43xx.o(.text.GetClkSel) for [Anonymous Symbol]
    system_lpc43xx.o(.text.SystemCoreClockUpdate) refers to system_lpc43xx.o(.text.GetClockFreq) for GetClockFreq
    system_lpc43xx.o(.text.SystemCoreClockUpdate) refers to system_lpc43xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_lpc43xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_lpc43xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_lpc43xx.o(.text.SystemInit) refers to startup_lpc43xx.o(RESET) for __Vectors
    system_lpc43xx.o(.text.SystemInit) refers to system_lpc43xx.o(.text.SetClock) for SetClock
    system_lpc43xx.o(.text.SystemInit) refers to system_lpc43xx.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    system_lpc43xx.o(.text.SystemInit) refers to system_lpc43xx.o(.text.SystemInit_ExtMemCtl) for SystemInit_ExtMemCtl
    system_lpc43xx.o(.ARM.exidx.text.SystemInit) refers to system_lpc43xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_lpc43xx.o(.ARM.exidx.text.SetClock) refers to system_lpc43xx.o(.text.SetClock) for [Anonymous Symbol]
    system_lpc43xx.o(.text.SystemInit_ExtMemCtl) refers to system_lpc43xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_lpc43xx.o(.text.SystemInit_ExtMemCtl) refers to system_lpc43xx.o(.rodata.emcdivby2_opc) for emcdivby2_opc
    system_lpc43xx.o(.text.SystemInit_ExtMemCtl) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    system_lpc43xx.o(.text.SystemInit_ExtMemCtl) refers to system_lpc43xx.o(.text.WaitUs) for WaitUs
    system_lpc43xx.o(.ARM.exidx.text.SystemInit_ExtMemCtl) refers to system_lpc43xx.o(.text.SystemInit_ExtMemCtl) for [Anonymous Symbol]
    system_lpc43xx.o(.text.WaitUs) refers to system_lpc43xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_lpc43xx.o(.text.WaitUs) refers to lludivv7m.o(.text) for __aeabi_uldivmod
    system_lpc43xx.o(.ARM.exidx.text.WaitUs) refers to system_lpc43xx.o(.text.WaitUs) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelPreInit) for osRtxKernelPreInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_lpc43xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_lpc43xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    printf.o(.text) refers (Special) to _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) for _printf_a
    printf.o(.text) refers (Special) to _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) for _printf_c
    printf.o(.text) refers (Special) to _printf_charcount.o(.text) for _printf_charcount
    printf.o(.text) refers (Special) to _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) for _printf_d
    printf.o(.text) refers (Special) to _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) for _printf_e
    printf.o(.text) refers (Special) to _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) for _printf_f
    printf.o(.text) refers (Special) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    printf.o(.text) refers (Special) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    printf.o(.text) refers (Special) to _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) for _printf_g
    printf.o(.text) refers (Special) to _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) for _printf_i
    printf.o(.text) refers (Special) to _printf_dec.o(.text) for _printf_int_dec
    printf.o(.text) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    printf.o(.text) refers (Special) to _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) for _printf_lc
    printf.o(.text) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    printf.o(.text) refers (Special) to _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) for _printf_lld
    printf.o(.text) refers (Special) to _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) for _printf_lli
    printf.o(.text) refers (Special) to _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) for _printf_llo
    printf.o(.text) refers (Special) to _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) for _printf_llu
    printf.o(.text) refers (Special) to _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) for _printf_llx
    printf.o(.text) refers (Special) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    printf.o(.text) refers (Special) to _printf_hex_int_ll_ptr.o(.text) for _printf_longlong_hex
    printf.o(.text) refers (Special) to _printf_oct_int_ll.o(.text) for _printf_longlong_oct
    printf.o(.text) refers (Special) to _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) for _printf_ls
    printf.o(.text) refers (Special) to _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) for _printf_n
    printf.o(.text) refers (Special) to _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) for _printf_o
    printf.o(.text) refers (Special) to _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) for _printf_p
    printf.o(.text) refers (Special) to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    printf.o(.text) refers (Special) to _printf_pad.o(.text) for _printf_post_padding
    printf.o(.text) refers (Special) to _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) for _printf_s
    printf.o(.text) refers (Special) to _printf_str.o(.text) for _printf_str
    printf.o(.text) refers (Special) to _printf_truncate.o(.text) for _printf_truncate_signed
    printf.o(.text) refers (Special) to _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) for _printf_u
    printf.o(.text) refers (Special) to _printf_wctomb.o(.text) for _printf_wctomb
    printf.o(.text) refers (Special) to _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) for _printf_x
    printf.o(.text) refers to _printf_char_file_locked.o(.text) for _printf_char_file
    printf.o(.text) refers to stdio_streams.o(.bss) for __stdout
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    aeabi_ldiv0_sigfpe.o(.text) refers to rt_div0.o(.text) for __rt_div0
    __printf.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    _printf_str.o(.text) refers (Special) to _printf_char.o(.text) for _printf_cs_common
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_str.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_signed
    _printf_dec.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_char_file.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file.o(.text) refers to ferror_locked.o(.text) for ferror
    _printf_char_file.o(.text) refers to fputc_locked.o(.text) for fputc
    _printf_wctomb.o(.text) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_wctomb.o(.text) refers to _c16rtomb.o(.text) for _wcrtomb
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_wctomb.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_wctomb.o(.text) refers to _printf_wctomb.o(.constdata) for .constdata
    _printf_wctomb.o(.constdata) refers (Special) to _printf_wchar.o(.text) for _printf_lcs_common
    _printf_longlong_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_longlong_dec.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_oct_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_oct_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll.o(.text) refers to _printf_hex_ll.o(.constdata) for .constdata
    _printf_hex_int.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int.o(.text) refers to _printf_hex_int.o(.constdata) for .constdata
    _printf_hex_int_ll.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll.o(.text) refers to _printf_hex_int_ll.o(.constdata) for .constdata
    _printf_hex_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ptr.o(.text) refers to _printf_hex_ptr.o(.constdata) for .constdata
    _printf_hex_int_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ptr.o(.text) refers to _printf_hex_int_ptr.o(.constdata) for .constdata
    _printf_hex_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_ll_ptr.o(.text) refers to _printf_hex_ll_ptr.o(.constdata) for .constdata
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_intcommon.o(.text) for _printf_int_common
    _printf_hex_int_ll_ptr.o(.text) refers (Weak) to _printf_truncate.o(.text) for _printf_truncate_unsigned
    _printf_hex_int_ll_ptr.o(.text) refers to _printf_hex_int_ll_ptr.o(.constdata) for .constdata
    __printf_flags.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags.o(.text) refers to __printf_flags.o(.constdata) for .constdata
    __printf_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss.o(.text) refers to __printf_flags_ss.o(.constdata) for .constdata
    __printf_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_wp.o(.text) refers to __printf_flags_wp.o(.constdata) for .constdata
    __printf_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_wp.o(i._is_digit) for _is_digit
    __printf_flags_ss_wp.o(.text) refers to _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) for _printf_percent
    __printf_flags_ss_wp.o(.text) refers to __printf_flags_ss_wp.o(.constdata) for .constdata
    _printf_c.o(.ARM.Collect$$_printf_percent$$00000013) refers (Weak) to _printf_char.o(.text) for _printf_char
    _printf_s.o(.ARM.Collect$$_printf_percent$$00000014) refers (Weak) to _printf_char.o(.text) for _printf_string
    _printf_n.o(.ARM.Collect$$_printf_percent$$00000001) refers (Weak) to _printf_charcount.o(.text) for _printf_charcount
    _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_int_hex
    _printf_p.o(.ARM.Collect$$_printf_percent$$00000002) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_hex_ptr
    _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_int_oct
    _printf_i.o(.ARM.Collect$$_printf_percent$$00000008) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_d.o(.ARM.Collect$$_printf_percent$$00000009) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A) refers (Weak) to _printf_dec.o(.text) for _printf_int_dec
    _printf_f.o(.ARM.Collect$$_printf_percent$$00000003) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_e.o(.ARM.Collect$$_printf_percent$$00000004) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_g.o(.ARM.Collect$$_printf_percent$$00000005) refers (Weak) to printf1.o(x$fpl$printf1) for _printf_fp_dec
    _printf_a.o(.ARM.Collect$$_printf_percent$$00000006) refers (Weak) to printf2.o(x$fpl$printf2) for _printf_fp_hex
    _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000) refers (Special) to _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017) for _printf_percent_end
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F) refers (Weak) to _printf_longlong_dec.o(.text) for _printf_longlong_dec
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015) refers (Weak) to _printf_wchar.o(.text) for _printf_wchar
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Special) to _printf_l.o(.ARM.Collect$$_printf_percent$$00000012) for _printf_l
    _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016) refers (Weak) to _printf_wchar.o(.text) for _printf_wstring
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010) refers (Weak) to _printf_oct_int_ll.o(.text) for _printf_ll_oct
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Special) to _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007) for _printf_ll
    _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011) refers (Weak) to _printf_hex_int_ll_ptr.o(.text) for _printf_ll_hex
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.bss) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    stdio_streams.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    printf1.o(x$fpl$printf1) refers to _printf_fp_dec.o(.text) for _printf_fp_dec_real
    printf2.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    printf2b.o(x$fpl$printf2) refers to _printf_fp_hex.o(.text) for _printf_fp_hex_real
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_div0.o(.text) refers to defsig_fpe_outer.o(.text) for __rt_SIGFPE
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_intcommon.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec.o(.text) refers to bigflt0.o(.text) for _btod_etento
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_d2e) for _btod_d2e
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    _printf_fp_dec.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    _printf_fp_dec.o(.text) refers to lludiv10.o(.text) for _ll_udiv10
    _printf_fp_dec.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_dec_accurate.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_dec_accurate.o(.text) refers (Special) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    _printf_fp_dec_accurate.o(.text) refers to btod_accurate.o(.text) for _btod_main
    _printf_fp_dec_accurate.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_dec_accurate.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_dec_accurate.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    _printf_fp_dec_accurate.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_fp_hex.o(.text) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    _printf_fp_hex.o(.text) refers to _printf_fp_infnan.o(.text) for _printf_fp_infnan
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_hex.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    _printf_fp_hex.o(.text) refers to _printf_fp_hex.o(.constdata) for .constdata
    _printf_fp_hex.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    _printf_char_common.o(.text) refers to __printf_flags_ss_wp.o(.text) for __printf
    _printf_char.o(.text) refers (Weak) to _printf_str.o(.text) for _printf_str
    _printf_wchar.o(.text) refers (Weak) to _printf_wctomb.o(.text) for _printf_wctomb
    fputc.o(i.fputc) refers to flsbuf.o(.text) for __flsbuf_byte
    initio.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000026) for __rt_lib_init_stdio_2
    initio.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio.o(.text) refers to fopen_locked.o(.text) for freopen
    initio.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio.o(.text) refers to h1_free_threads.o(.text) for free
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fputc_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputc_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    ferror_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    ferror_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000026) for __rt_lib_init_stdio_2
    initio_locked.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) for __rt_lib_shutdown_stdio_2
    initio_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    initio_locked.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    initio_locked.o(.text) refers to fopen_locked.o(.text) for freopen
    initio_locked.o(.text) refers to defsig_rtred_outer.o(.text) for __rt_SIGRTRED
    initio_locked.o(.text) refers to setvbuf_locked.o(.text) for setvbuf
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to h1_free_threads.o(.text) for free
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    initio_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stdout
    initio_locked.o(.text) refers to stdio_streams.o(.bss) for __stderr
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdin
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stdout
    initio_locked.o(.text) refers to stdio_streams.o(.data) for __aeabi_stderr
    initio_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdin_name) for __stdin_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stdout_name) for __stdout_name
    initio_locked.o(.text) refers to retarget_io.o(.rodata.__stderr_name) for __stderr_name
    _c16rtomb.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_lpc43xx.o(.text) for __user_initial_stackheap
    rt_ctype_table.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    free.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    free.o(.text) refers to heapstubs.o(.text) for __Heap_Free
    h1_free.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_free_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_free_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i._FDIterate) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.__Heap_ProvideMemory$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.__Heap_Stats$realtime) refers to heap2.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(i._FDIterate) for _FDIterate
    heap2.o(i.__Heap_Valid$realtime) refers to heap2.o(.conststring) for .conststring
    heap2.o(i.free$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.free$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.malloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.malloc$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.malloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.posix_memalign$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2.o(i.posix_memalign$realtime) refers to init_alloc.o(.text) for __Heap_Full
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2.o(i.posix_memalign$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2.o(i.realloc$realtime) refers to h1_free_threads.o(.text) for free
    heap2.o(i.realloc$realtime) refers to h1_alloc_threads.o(.text) for malloc
    heap2.o(i.realloc$realtime) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2.o(i.realloc$realtime) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i._FDIterate) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.__Heap_Finalize$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    heap2_threads.o(i.__Heap_Initialize$realtime$concurrent) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.__Heap_ProvideMemory$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers to heap2_threads.o(i._Heap2_StatsIterate) for _Heap2_StatsIterate
    heap2_threads.o(i.__Heap_Stats$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(i._FDIterate) for _FDIterate
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.__Heap_Valid$realtime$concurrent) refers to heap2_threads.o(.conststring) for .conststring
    heap2_threads.o(i.free$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.free$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.free$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.malloc$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.malloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.malloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_FindFirst) for _FDTree_FindFirst
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to init_alloc.o(.text) for __Heap_Full
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_RemoveNode) for _FDTree_RemoveNode
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.posix_memalign$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Insert) for _FDTree_Insert
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_free_threads.o(.text) for free
    heap2_threads.o(i.realloc$realtime$concurrent) refers to h1_alloc_threads.o(.text) for malloc
    heap2_threads.o(i.realloc$realtime$concurrent) refers to fdtree.o(i._FDTree_Delete) for _FDTree_Delete
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    heap2_threads.o(i.realloc$realtime$concurrent) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_pre_padding
    _printf_fp_infnan.o(.text) refers (Weak) to _printf_pad.o(.text) for _printf_post_padding
    bigflt0.o(.text) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    bigflt0.o(.text) refers to btod.o(CL$$btod_emul) for _btod_emul
    bigflt0.o(.text) refers to btod.o(CL$$btod_ediv) for _btod_ediv
    bigflt0.o(.text) refers to bigflt0.o(.constdata) for .constdata
    bigflt0.o(.constdata) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e) refers to btod.o(CL$$btod_d2e_norm_op1) for _d2e_norm_op1
    btod.o(CL$$btod_d2e_norm_op1) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_d2e_norm_op1) refers to btod.o(CL$$btod_d2e_denorm_low) for _d2e_denorm_low
    btod.o(CL$$btod_d2e_denorm_low) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emul) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_ediv) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_ediv) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_emuld) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_mult_common) for __btod_mult_common
    btod.o(CL$$btod_emuld) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_edivd) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_div_common) for __btod_div_common
    btod.o(CL$$btod_edivd) refers to btod.o(CL$$btod_e2d) for _e2d
    btod.o(CL$$btod_e2e) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_e2d) refers to btod.o(CL$$btod_e2e) for _e2e
    btod.o(CL$$btod_mult_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod.o(CL$$btod_div_common) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    btod_accurate.o(.text) refers to btod_accurate_common.o(.text) for _btod_common
    flsbuf.o(.text) refers to stdio.o(.text) for _deferredlazyseek
    flsbuf.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    flsbuf.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    flsbuf.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    streamlock.o(.data) refers (Special) to initio_locked.o(.text) for _initio
    fopen.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen.o(.text) refers to fseek.o(.text) for _fseek
    fopen.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fclose.o(.text) refers to stdio.o(.text) for _fflush
    fclose.o(.text) refers to retarget_io.o(.text._sys_close) for _sys_close
    fclose.o(.text) refers to h1_free_threads.o(.text) for free
    fclose.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    setvbuf_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to fclose.o(.text) for _fclose_internal
    fopen_locked.o(.text) refers to retarget_io.o(.text._sys_open) for _sys_open
    fopen_locked.o(.text) refers to fseek.o(.text) for _fseek
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fopen_locked.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    fopen_locked.o(.text) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    fopen_locked.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    fopen_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fopen_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fopen_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    lc_numeric_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000018) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000018) for __rt_lib_init_lc_numeric_2
    lc_numeric_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_numeric_c.o(locale$$code) refers to lc_numeric_c.o(locale$$data) for __lcnum_c_name
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    defsig_fpe_outer.o(.text) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig_fpe_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_fpe_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    defsig_rtred_outer.o(.text) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig_rtred_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtred_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to rtx_lib.o(.text.$Sub$$_fp_init) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000007) refers (Weak) to init_alloc.o(.text) for _init_alloc
    libinit2.o(.ARM.Collect$$libinit$$00000011) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers (Weak) to lc_numeric_c.o(locale$$code) for _get_lc_numeric
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers (Weak) to initio_locked.o(.text) for _initio
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libshutdown2.o(.ARM.Collect$$libshutdown$$00000003) refers (Weak) to initio_locked.o(.text) for _terminateio
    libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) refers (Weak) to term_alloc.o(.text) for _terminate_alloc
    flsbuf_fwide.o(.text) refers to flsbuf.o(.text) for __flsbuf
    istatus.o(x$fpl$ieeestatus) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    rt_heap_descriptor.o(.text) refers to rt_heap_descriptor.o(.bss) for __rt_heap_descriptor_data
    rt_heap_descriptor_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_heap_descriptor_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    init_alloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    init_alloc.o(.text) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000007) for __rt_lib_init_heap_2
    init_alloc.o(.text) refers (Special) to maybetermalloc2.o(.text) for _maybe_terminate_alloc
    init_alloc.o(.text) refers to h1_extend_threads.o(.text) for __Heap_ProvideMemory
    init_alloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    init_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    init_alloc.o(.text) refers to h1_init_threads.o(.text) for __Heap_Initialize
    malloc.o(.text) refers (Special) to hguard.o(.text) for __heap$guard
    malloc.o(.text) refers (Special) to init_alloc.o(.text) for _init_alloc
    malloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    malloc.o(.text) refers to heapstubs.o(.text) for __Heap_Alloc
    h1_alloc.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    h1_alloc.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Special) to h1_init_threads.o(.text) for __Heap_Initialize
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to init_alloc.o(.text) for __Heap_Full
    h1_alloc_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    h1_alloc_threads.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    _printf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    _printf_char_file_locked.o(.text) refers to _printf_char_common.o(.text) for _printf_char_common
    _printf_char_file_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    _printf_char_file_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    btod_accurate_common.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    fseek.o(.text) refers to retarget_io.o(.text._sys_istty) for _sys_istty
    fseek.o(.text) refers to ftell.o(.text) for _ftell_internal
    fseek.o(.text) refers to retarget_io.o(.text._sys_flen) for _sys_flen
    fseek.o(.text) refers to stdio.o(.text) for _seterr
    stdio.o(.text) refers to retarget_io.o(.text._sys_seek) for _sys_seek
    stdio.o(.text) refers to retarget_io.o(.text._sys_write) for _sys_write
    fwritefast.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fwritefast_locked.o(.text) refers to stdio.o(.text) for _writebuf
    fwritefast_locked.o(.text) refers to flsbuf.o(.text) for __flsbuf_byte
    fwritefast_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fwritefast_locked.o(.text) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000014) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv7em.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    assert_stdio.o(.text) refers to fputs_locked.o(.text) for fputs
    assert_stdio.o(.text) refers to fflush_locked.o(.text) for fflush
    assert_stdio.o(.text) refers to stdio_streams.o(.bss) for __stderr
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    maybetermalloc2.o(.text) refers (Special) to term_alloc.o(.text) for _terminate_alloc
    h1_extend.o(.text) refers to h1_free_threads.o(.text) for free
    h1_init_threads.o(.text) refers to rtx_lib.o(.text._mutex_initialize) for _mutex_initialize
    h1_extend_threads.o(.text) refers to h1_free_threads.o(.text) for free_internal$concurrent
    fflush.o(.text) refers to stdio.o(.text) for _fflush
    fflush.o(.text) refers to fseek.o(.text) for _fseek
    fflush.o(.text) refers to stdio_streams.o(.bss) for __stdin
    fputs.o(.text) refers to fputc_locked.o(.text) for fputc
    ftell.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fputs_locked.o(.text) refers to fputc.o(i.fputc) for _fputc$unlocked
    fputs_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers to stdio.o(.text) for _fflush
    fflush_locked.o(.text) refers to fseek.o(.text) for _fseek
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_acquire) for _mutex_acquire
    fflush_locked.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_release) for _mutex_release
    fflush_locked.o(.text) refers to streamlock.o(.data) for _stream_list_lock
    fflush_locked.o(.text) refers to stdio_streams.o(.bss) for __stdin
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    heapauxa.o(.text) refers to heapauxa.o(.data) for .data
    _get_argv.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv.o(.text) refers to h1_alloc_threads.o(.text) for malloc
    _get_argv.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv.o(.text) refers to sys_command.o(.text) for _sys_command_string
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(.text.__user_perthread_libspace) for __user_perthread_libspace
    term_alloc.o(.text) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D) for __rt_lib_shutdown_heap_2
    term_alloc.o(.text) refers to rt_heap_descriptor_twolibspace.o(.text) for __rt_heap_descriptor
    term_alloc.o(.text) refers to h1_final_threads.o(.text) for __Heap_Finalize
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig.o(CL$$defsig) refers to defsig_fpe_inner.o(.text) for __rt_SIGFPE_inner
    defsig.o(CL$$defsig) refers to defsig_rtred_inner.o(.text) for __rt_SIGRTRED_inner
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    h1_final_threads.o(.text) refers (Weak) to rtx_lib.o(.text._mutex_free) for _mutex_free
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Init_Thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.Thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.Init_TIMER0), (8 bytes).
    Removing main.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing main.o(.ARM.exidx.text.increment), (8 bytes).
    Removing main.o(.ARM.exidx.text.TIMER0_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing led_mcb4300.o(.text), (0 bytes).
    Removing led_mcb4300.o(.ARM.exidx.text.LED_Initialize), (8 bytes).
    Removing led_mcb4300.o(.text.LED_Uninitialize), (60 bytes).
    Removing led_mcb4300.o(.ARM.exidx.text.LED_Uninitialize), (8 bytes).
    Removing led_mcb4300.o(.ARM.exidx.text.LED_On), (8 bytes).
    Removing led_mcb4300.o(.ARM.exidx.text.LED_Off), (8 bytes).
    Removing led_mcb4300.o(.text.LED_SetOut), (64 bytes).
    Removing led_mcb4300.o(.ARM.exidx.text.LED_SetOut), (8 bytes).
    Removing led_mcb4300.o(.text.LED_GetCount), (4 bytes).
    Removing led_mcb4300.o(.ARM.exidx.text.LED_GetCount), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.$Sub$$_fp_init), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing rtx_lib.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing retarget_io.o(.text), (0 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_SendChar), (8 bytes).
    Removing retarget_io.o(.text.ITM_ReceiveChar), (62 bytes).
    Removing retarget_io.o(.ARM.exidx.text.ITM_ReceiveChar), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_open), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_close), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_write), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text.stdout_putchar), (8 bytes).
    Removing retarget_io.o(.text._sys_read), (88 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_read), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_istty), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_seek), (8 bytes).
    Removing retarget_io.o(.ARM.exidx.text._sys_flen), (8 bytes).
    Removing retarget_io.o(.data.ITM_RxBuffer), (4 bytes).
    Removing gpio_lpc43xx.o(.text), (0 bytes).
    Removing gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PortClock), (8 bytes).
    Removing gpio_lpc43xx.o(.ARM.exidx.text.GPIO_SetDir), (8 bytes).
    Removing gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PinWrite), (8 bytes).
    Removing gpio_lpc43xx.o(.text.GPIO_PinRead), (32 bytes).
    Removing gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PinRead), (8 bytes).
    Removing gpio_lpc43xx.o(.text.GPIO_PortWrite), (46 bytes).
    Removing gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PortWrite), (8 bytes).
    Removing gpio_lpc43xx.o(.text.GPIO_PortRead), (22 bytes).
    Removing gpio_lpc43xx.o(.ARM.exidx.text.GPIO_PortRead), (8 bytes).
    Removing scu_lpc43xx.o(.text), (0 bytes).
    Removing scu_lpc43xx.o(.ARM.exidx.text.SCU_PinConfigure), (8 bytes).
    Removing scu_lpc43xx.o(.text.SCU_CLK_PinConfigure), (56 bytes).
    Removing scu_lpc43xx.o(.ARM.exidx.text.SCU_CLK_PinConfigure), (8 bytes).
    Removing scu_lpc43xx.o(.text.SCU_USB1_PinConfigure), (22 bytes).
    Removing scu_lpc43xx.o(.ARM.exidx.text.SCU_USB1_PinConfigure), (8 bytes).
    Removing scu_lpc43xx.o(.text.SCU_I2C_PinConfigure), (74 bytes).
    Removing scu_lpc43xx.o(.ARM.exidx.text.SCU_I2C_PinConfigure), (8 bytes).
    Removing scu_lpc43xx.o(.text.SCU_ADC_ChannelPinConfigure), (134 bytes).
    Removing scu_lpc43xx.o(.ARM.exidx.text.SCU_ADC_ChannelPinConfigure), (8 bytes).
    Removing scu_lpc43xx.o(.text.SCU_DAC_PinConfigure), (74 bytes).
    Removing scu_lpc43xx.o(.ARM.exidx.text.SCU_DAC_PinConfigure), (8 bytes).
    Removing scu_lpc43xx.o(.text.SCU_PinInterruptSourceSelect), (196 bytes).
    Removing scu_lpc43xx.o(.ARM.exidx.text.SCU_PinInterruptSourceSelect), (8 bytes).
    Removing system_lpc43xx.o(.text), (0 bytes).
    Removing system_lpc43xx.o(.text.MeasureFreq), (132 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.MeasureFreq), (8 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.GetClockFreq), (8 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.GetPLL1Param), (8 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.GetClkSel), (8 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.SetClock), (8 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.SystemInit_ExtMemCtl), (8 bytes).
    Removing system_lpc43xx.o(.ARM.exidx.text.WaitUs), (8 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelPreInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (88 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (116 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (136 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (102 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_2), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_4), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (120 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (104 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (312 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (72 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (92 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (100 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueNew), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (166 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (108 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (44 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).

410 unused section(s) (total 8531 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding TT veneer (10 bytes, Long) for call to '_init_alloc' from libinit2.o(.ARM.Collect$$libinit$$00000007).
    Adding TT veneer (10 bytes, Long) for call to '_get_lc_numeric' from libinit2.o(.ARM.Collect$$libinit$$00000018).
    Adding TT veneer (10 bytes, Long) for call to '_initio' from libinit2.o(.ARM.Collect$$libinit$$00000026).
    Adding TT veneer (10 bytes, Long) for call to 'main' from __rtentry2.o(.ARM.Collect$$rtentry$$0000000D).
    Adding TT veneer (10 bytes, Long) for call to '_printf_truncate_signed' from _printf_dec.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_printf_truncate_unsigned' from _printf_dec.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_printf_percent' from __printf_flags_ss_wp.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_printf_pre_padding' from _printf_intcommon.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_printf_post_padding' from _printf_intcommon.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_btod_etento' from _printf_fp_dec.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_btod_ediv' from _printf_fp_dec.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_btod_emul' from _printf_fp_dec.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__ARM_fpclassify' from _printf_fp_dec.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_printf_wctomb' from _printf_wchar.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_fclose_internal' from fopen_locked.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_fseek' from fopen_locked.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_mutex_release' from fopen_locked.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__rt_exit' from exit.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__Heap_Full' from h1_alloc_threads.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_sys_write' from stdio.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_sys_exit' from defsig_exit.o(.text).
    Adding TT veneer (10 bytes, Long) for call to 'free_internal$concurrent' from h1_extend_threads.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__rt_SIGRTMEM_inner' from defsig_rtmem_outer.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '$Super$$_fp_init' from rtx_lib.o(.text.$Sub$$_fp_init).
    Adding TT veneer (10 bytes, Long) for call to 'osThreadNew' from main.o(.text.Init_Thread).
    Adding TT veneer (10 bytes, Long) for call to 'SCU_PinConfigure' from led_mcb4300.o(.text.LED_Initialize).
    Adding TT veneer (10 bytes, Long) for call to 'GPIO_PinWrite' from led_mcb4300.o(.text.LED_Initialize).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadWaitExit' from rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadListGet' from rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1).
    Adding TT veneer (10 bytes, Long) for call to 'GetClockFreq' from system_lpc43xx.o(.text.SystemCoreClockUpdate).
    Adding TT veneer (10 bytes, Long) for call to 'osMutexNew' from rtx_lib.o(.text._mutex_initialize).
    Adding TT veneer (10 bytes, Long) for call to 'strcmp' from retarget_io.o(.text._sys_open).
    Adding TT veneer (10 bytes, Long) for call to '__aeabi_memcpy' from rtx_msgqueue.o(.text.osMessageQueueGet).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxErrorNotify' from rtx_kernel.o(.text.osRtxKernelErrorNotify).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadListSort' from rtx_mutex.o(.text.osRtxMutexOwnerRestore).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadDispatch' from rtx_system.o(.text.osRtxPendSV_Handler).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadListRemove' from rtx_thread.o(.text.osRtxThreadDelayTick).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadListPut' from rtx_thread.o(.text.osRtxThreadReadyPut).
    Adding TT veneer (10 bytes, Long) for call to 'OS_Tick_AcknowledgeIRQ' from rtx_system.o(.text.osRtxTick_Handler).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadSwitch' from rtx_system.o(.text.osRtxTick_Handler).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxMessageQueueTimerSetup' from rtx_timer.o(.text.osRtxTimerSetup).
    Adding TT veneer (10 bytes, Long) for call to 'OUTLINED_FUNCTION_0' from rtx_thread.o(.text.osThreadYield).
    Adding TT veneer (10 bytes, Long) for call to 'ITM_SendChar' from retarget_io.o(.text.stdout_putchar).
    Adding TT veneer (10 bytes, Long) for call to 'OUTLINED_FUNCTION_0' from rtx_kernel.o(.text.svcRtxKernelInitialize).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxMemoryPoolFree' from rtx_msgqueue.o(.text.svcRtxMessageQueueNew).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxMemoryFree' from rtx_msgqueue.o(.text.svcRtxMessageQueueNew).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxMemoryPoolInit' from rtx_msgqueue.o(.text.svcRtxMessageQueueNew).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadRegPtr' from rtx_msgqueue.o(.text.svcRtxMessageQueuePut).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxMutexOwnerRelease' from rtx_thread.o(.text.svcRtxThreadExit).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadDestroy' from rtx_thread.o(.text.svcRtxThreadExit).
    Adding TT veneer (10 bytes, Long) for call to '_printf_fp_hex_real' from printf2.o(x$fpl$printf2).
    Adding TT veneer (10 bytes, Long) for call to '_printf_charcount' from _printf_n.o(.ARM.Collect$$_printf_percent$$00000001).
    Adding TT veneer (10 bytes, Long) for call to '_printf_fp_hex' from _printf_a.o(.ARM.Collect$$_printf_percent$$00000006).
    Adding TT veneer (10 bytes, Long) for call to '_printf_int_dec' from _printf_i.o(.ARM.Collect$$_printf_percent$$00000008).
    Adding TT veneer (10 bytes, Long) for call to '_printf_wchar' from _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015).
    Adding TT veneer (10 bytes, Long) for call to '_printf_wstring' from _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016).
    Adding TT veneer (10 bytes, Long) for call to '_ll_udiv10' from _printf_longlong_dec.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_printf_int_common' from _printf_longlong_dec.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_printf_fp_infnan' from _printf_fp_hex.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__aeabi_memclr4' from initio_locked.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_mutex_initialize' from initio_locked.o(.text).
    Adding TT veneer (10 bytes, Long) for call to 'freopen' from initio_locked.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_mutex_acquire' from initio_locked.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_mutex_free' from initio_locked.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__rt_ctype_table' from _c16rtomb.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__rt_heap_descriptor' from h1_free_threads.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_deferredlazyseek' from flsbuf.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_seterr' from flsbuf.o(.text).
    Adding TT veneer (10 bytes, Long) for call to 'malloc' from flsbuf.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_writebuf' from flsbuf.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_fflush' from fclose.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_sys_close' from fclose.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__sig_exit' from defsig_rtred_outer.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__Heap_ProvideMemory' from init_alloc.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__rt_SIGRTMEM' from init_alloc.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '_ftell_internal' from fseek.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__Heap_Finalize' from term_alloc.o(.text).
    Adding TT veneer (10 bytes, Long) for call to '__NVIC_EnableIRQ' from main.o(.text.Init_TIMER0).
    Adding TT veneer (10 bytes, Long) for call to 'SystemCoreClockUpdate' from system_lpc43xx.o(.text.SystemInit).
    Adding TT veneer (10 bytes, Long) for call to '__aeabi_uldivmod' from system_lpc43xx.o(.text.SystemInit_ExtMemCtl).
    Adding TT veneer (10 bytes, Long) for call to 'WaitUs' from system_lpc43xx.o(.text.SystemInit_ExtMemCtl).
    Adding TT veneer (10 bytes, Long) for call to 'LED_Initialize' from main.o(.text.Thread).
    Adding TT veneer (10 bytes, Long) for call to 'osThreadYield' from main.o(.text.Thread).
    Adding TT veneer (10 bytes, Long) for call to 'printf' from main.o(.text.Thread).
    Adding TT veneer (10 bytes, Long) for call to 'osDelay' from main.o(.text.Thread).
    Adding TT veneer (10 bytes, Long) for call to 'LED_On' from main.o(.text.Thread).
    Adding TT veneer (10 bytes, Long) for call to 'os_kernel_is_active' from rtx_lib.o(.text._mutex_release).
    Adding TT veneer (10 bytes, Long) for call to 'stdout_putchar' from retarget_io.o(.text._sys_write).
    Adding TT veneer (10 bytes, Long) for call to 'osKernelInitialize' from main.o(.text.main).
    Adding TT veneer (10 bytes, Long) for call to 'Init_Thread' from main.o(.text.main).
    Adding TT veneer (10 bytes, Long) for call to 'osKernelStart' from main.o(.text.main).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxMemoryPoolAlloc' from rtx_msgqueue.o(.text.osMessageQueuePut).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxPostProcess' from rtx_msgqueue.o(.text.osMessageQueuePut).
    Adding TT veneer (10 bytes, Long) for call to 'MessageQueueRemove' from rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess).
    Adding TT veneer (10 bytes, Long) for call to 'OUTLINED_FUNCTION_0' from rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess).
    Adding TT veneer (10 bytes, Long) for call to 'MessageQueuePut' from rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess).
    Adding TT veneer (10 bytes, Long) for call to 'svcRtxMessageQueueNew' from rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadReadyPut' from rtx_thread.o(.text.osRtxThreadDispatch).
    Adding TT veneer (10 bytes, Long) for call to 'svcRtxThreadNew' from rtx_thread.o(.text.osRtxThreadStartup).
    Adding TT veneer (10 bytes, Long) for call to 'osMessageQueueGet' from rtx_timer.o(.text.osRtxTimerThread).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxKernelErrorNotify' from rtx_timer.o(.text.osRtxTimerTick).
    Adding TT veneer (10 bytes, Long) for call to 'TimerInsert' from rtx_timer.o(.text.osRtxTimerTick).
    Adding TT veneer (10 bytes, Long) for call to 'osRtxThreadWaitEnter' from rtx_delay.o(.text.svcRtxDelay).
    Adding TT veneer (10 bytes, Long) for call to 'OS_Tick_Enable' from rtx_kernel.o(.text.svcRtxKernelStart).
    Adding TT veneer (10 bytes, Long) for call to 'MessageQueueGet' from rtx_msgqueue.o(.text.svcRtxMessageQueueGet).
    Adding TT veneer (10 bytes, Long) for call to 'OUTLINED_FUNCTION_1' from rtx_msgqueue.o(.text.svcRtxMessageQueueGet).
    Adding TT veneer (10 bytes, Long) for call to '__btod_div_common' from btod.o(CL$$btod_ediv).
    Adding TT veneer (10 bytes, Long) for call to '_e2e' from btod.o(CL$$btod_ediv).
    Adding TT veneer (10 bytes, Long) for call to '__btod_mult_common' from btod.o(CL$$btod_emul).
    Adding TT veneer (10 bytes, Long) for call to '_printf_fp_dec_real' from printf1.o(x$fpl$printf1).

110 Veneer(s) (total 1100 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  aeabi_ldiv0_sigfpe.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_div0.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_heap_descriptor_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/assert.c                         0x00000000   Number         0  assert_stdio.o ABSOLUTE
    ../clib/bigflt.c                         0x00000000   Number         0  bigflt0.o ABSOLUTE
    ../clib/btod.s                           0x00000000   Number         0  btod.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate.o ABSOLUTE
    ../clib/btod_accurate.c                  0x00000000   Number         0  btod_accurate_common.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_free_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_alloc_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_init_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_extend_threads.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final.o ABSOLUTE
    ../clib/heap1.c                          0x00000000   Number         0  h1_final_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  heap2_threads.o ABSOLUTE
    ../clib/heap2.c                          0x00000000   Number         0  fdtree.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  free.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  init_alloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  malloc.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  heapstubs.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  term_alloc.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxa.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/locale.c                         0x00000000   Number         0  _c16rtomb.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_numeric_c.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludivv7m.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  lludiv10.o ABSOLUTE
    ../clib/longlong.s                       0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc1.o ABSOLUTE
    ../clib/maybe.s                          0x00000000   Number         0  maybetermalloc2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7em.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/misc.s                           0x00000000   Number         0  printf_stubs.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_pad.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_truncate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_str.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_charcount.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wctomb.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_longlong_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_oct_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_hex_int_ll_ptr.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_flags_ss_wp.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_intcommon.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_dec_accurate.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_hex.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_common.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_wchar.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_fp_infnan.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  __printf_nopercent.o ABSOLUTE
    ../clib/printf.c                         0x00000000   Number         0  _printf_char_file_locked.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_c.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_s.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_n.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_x.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_p.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_o.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_i.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_d.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_u.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_f.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_e.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_g.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_a.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lli.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lld.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llu.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ll.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_l.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_lc.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_ls.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llo.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_llx.o ABSOLUTE
    ../clib/printf_percent.s                 0x00000000   Number         0  _printf_percent_end.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio_streams.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputc_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ferror_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  initio_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  flsbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  streamlock.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fclose.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  setvbuf_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fopen_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fseek.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  stdio.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fwritefast_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  ftell.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fputs_locked.o ABSOLUTE
    ../clib/stdio.c                          0x00000000   Number         0  fflush_locked.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/wchar.c                          0x00000000   Number         0  flsbuf_fwide.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/istatus.s                       0x00000000   Number         0  istatus.o ABSOLUTE
    ../fplib/printf1.s                       0x00000000   Number         0  printf1.o ABSOLUTE
    ../fplib/printf2.s                       0x00000000   Number         0  printf2.o ABSOLUTE
    ../fplib/printf2a.s                      0x00000000   Number         0  printf2a.o ABSOLUTE
    ../fplib/printf2b.s                      0x00000000   Number         0  printf2b.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    GPIO_LPC43xx.c                           0x00000000   Number         0  gpio_lpc43xx.o ABSOLUTE
    LED_MCB4300.c                            0x00000000   Number         0  led_mcb4300.o ABSOLUTE
    RTE/Device/LPC4357_Cortex-M4/startup_LPC43xx.s 0x00000000   Number         0  startup_lpc43xx.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    SCU_LPC43xx.c                            0x00000000   Number         0  scu_lpc43xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    retarget_io.c                            0x00000000   Number         0  retarget_io.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    system_LPC43xx.c                         0x00000000   Number         0  system_lpc43xx.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    .data                                    0x10000000   Section        4  stdio_streams.o(.data)
    .bss                                     0x100000a8   Section       84  stdio_streams.o(.bss)
    .bss                                     0x100000fc   Section       96  libspace.o(.bss)
    os_timer_mq_data                         0x1000015c   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x1000015c   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_kernel_is_active.os_kernel_active     0x100001ac   Data           1  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    [Anonymous Symbol]                       0x100001ac   Section        0  rtx_lib.o(.bss.os_kernel_is_active.os_kernel_active)
    Heap_Mem                                 0x100001b0   Data         512  startup_lpc43xx.o(HEAP)
    HEAP                                     0x100001b0   Section      512  startup_lpc43xx.o(HEAP)
    Stack_Mem                                0x100003b0   Data        1024  startup_lpc43xx.o(STACK)
    STACK                                    0x100003b0   Section     1024  startup_lpc43xx.o(STACK)
    __initial_sp                             0x100007b0   Data           0  startup_lpc43xx.o(STACK)
    RESET                                    0x1a000000   Section      768  startup_lpc43xx.o(RESET)
    !!!main                                  0x1a000300   Section        8  __main.o(!!!main)
    !!!scatter                               0x1a000308   Section       92  __scatter.o(!!!scatter)
    !!handler_copy                           0x1a000364   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_null                           0x1a000380   Section        2  __scatter.o(!!handler_null)
    !!handler_zi                             0x1a000384   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x1a0003a0   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x1a0003a2   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x1a0003a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x1a0003a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$00000007          0x1a0003a6   Section        8  libinit2.o(.ARM.Collect$$libinit$$00000007)
    .ARM.Collect$$libinit$$0000000C          0x1a0003ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x1a0003ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x1a0003ae   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000011          0x1a0003ae   Section        6  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x1a0003b4   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000014          0x1a0003b4   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000014)
    .ARM.Collect$$libinit$$00000015          0x1a0003c0   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x1a0003c0   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000018          0x1a0003c0   Section       10  libinit2.o(.ARM.Collect$$libinit$$00000018)
    .ARM.Collect$$libinit$$00000019          0x1a0003ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x1a0003ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x1a0003ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x1a0003ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x1a0003ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x1a0003ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x1a0003ca   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000026          0x1a0003ca   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000026)
    .ARM.Collect$$libinit$$00000027          0x1a0003ce   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x1a0003ce   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x1a0003ce   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x1a0003ce   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x1a0003ce   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x1a0003ce   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$rtentry$$00000000          0x1a0003d0   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x1a0003d0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x1a0003d0   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x1a0003d6   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x1a0003de   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x1a0003e2   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x1a0003e2   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    $v0                                      0x1a0003ec   Number         0  startup_lpc43xx.o(.text)
    .text                                    0x1a0003ec   Section       64  startup_lpc43xx.o(.text)
    [Anonymous Symbol]                       0x1a00042c   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x1a000454   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x1a000464   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x1a000476   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x1a00048c   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x1a0004a8   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x1a0004aa   Number         0  irq_armv7m.o(.text)
    .text                                    0x1a0004f4   Section      240  lludivv7m.o(.text)
    .text                                    0x1a0005e4   Section        0  printf.o(.text)
    .text                                    0x1a0005fc   Section       68  rt_memclr.o(.text)
    .text                                    0x1a000640   Section       78  rt_memclr_w.o(.text)
    .text                                    0x1a00068e   Section        0  heapauxi.o(.text)
    .text                                    0x1a000694   Section        0  _printf_dec.o(.text)
    .text                                    0x1a00070c   Section        0  _printf_charcount.o(.text)
    .text                                    0x1a000734   Section        0  __printf_flags_ss_wp.o(.text)
    .text                                    0x1a0008bc   Section      138  lludiv10.o(.text)
    .text                                    0x1a000946   Section        0  _printf_intcommon.o(.text)
    _fp_digits                               0x1a0009f9   Thumb Code   432  _printf_fp_dec.o(.text)
    .text                                    0x1a0009f8   Section        0  _printf_fp_dec.o(.text)
    _printf_input_char                       0x1a000e15   Thumb Code    10  _printf_char_common.o(.text)
    .text                                    0x1a000e14   Section        0  _printf_char_common.o(.text)
    .text                                    0x1a000e44   Section        0  _printf_wchar.o(.text)
    .text                                    0x1a000e70   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x1a000ebc   Section       16  rt_ctype_table.o(.text)
    .text                                    0x1a000ecc   Section       10  rt_locale_twolibspace.o(.text)
    .text                                    0x1a000ed8   Section        0  _printf_fp_infnan.o(.text)
    _freopen_locked                          0x1a000f59   Thumb Code   180  fopen_locked.o(.text)
    .text                                    0x1a000f58   Section        0  fopen_locked.o(.text)
    .text                                    0x1a0010a4   Section        0  exit.o(.text)
    .text                                    0x1a0010b8   Section        8  libspace.o(.text)
    .text                                    0x1a0010c0   Section       10  rt_heap_descriptor_twolibspace.o(.text)
    .text                                    0x1a0010ca   Section        0  hguard.o(.text)
    AlignUp                                  0x1a0010cf   Thumb Code    10  h1_alloc_threads.o(.text)
    .text                                    0x1a0010ce   Section        0  h1_alloc_threads.o(.text)
    Heap1_SizeAdjust                         0x1a0010d9   Thumb Code     6  h1_alloc_threads.o(.text)
    .text                                    0x1a001174   Section        0  _printf_char_file_locked.o(.text)
    .text                                    0x1a0011b4   Section        0  stdio.o(.text)
    .text                                    0x1a0012bc   Section        0  defsig_exit.o(.text)
    AlignUpOffset                            0x1a0012c7   Thumb Code    14  h1_extend_threads.o(.text)
    .text                                    0x1a0012c6   Section        0  h1_extend_threads.o(.text)
    .text                                    0x1a001318   Section        0  ftell.o(.text)
    .text                                    0x1a00135a   Section        0  defsig_rtmem_outer.o(.text)
    .text                                    0x1a001368   Section        2  use_no_semi.o(.text)
    .text                                    0x1a00136a   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x1a00136e   Section        0  h1_final_threads.o(.text)
    [Anonymous Symbol]                       0x1a001378   Section        0  rtx_lib.o(.text.$Sub$$_fp_init)
    [Anonymous Symbol]                       0x1a001390   Section        0  gpio_lpc43xx.o(.text.GPIO_PortClock)
    [Anonymous Symbol]                       0x1a001414   Section        0  gpio_lpc43xx.o(.text.GPIO_SetDir)
    [Anonymous Symbol]                       0x1a001464   Section        0  main.o(.text.Init_Thread)
    [Anonymous Symbol]                       0x1a0014a0   Section        0  led_mcb4300.o(.text.LED_Initialize)
    [Anonymous Symbol]                       0x1a001514   Section        0  led_mcb4300.o(.text.LED_On)
    MessageQueueGet                          0x1a001551   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x1a001550   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x1a001591   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x1a001590   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x1a0015e9   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x1a0015e8   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x1a001604   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x1a001624   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x1a001628   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x1a00162c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    OUTLINED_FUNCTION_0                      0x1a001631   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x1a001630   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x1a00163d   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x1a00163c   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x1a001643   Thumb Code     6  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x1a001642   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x1a001648   Section        0  system_lpc43xx.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x1a001670   Section        0  main.o(.text.TIMER0_IRQHandler)
    ThreadFlagsCheck                         0x1a001685   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x1a001684   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x1a0016e9   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x1a0016e8   Section        0  rtx_timer.o(.text.TimerInsert)
    WaitUs                                   0x1a00172d   Thumb Code    76  system_lpc43xx.o(.text.WaitUs)
    [Anonymous Symbol]                       0x1a00172c   Section        0  system_lpc43xx.o(.text.WaitUs)
    __NVIC_EnableIRQ                         0x1a001779   Thumb Code    48  main.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x1a001778   Section        0  main.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x1a0017a8   Section        0  rtx_lib.o(.text.__user_perthread_libspace)
    __tagsym$$used.1                         0x1a001840   Number         0  rtx_lib.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x1a001840   Section        0  rtx_lib.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x1a001860   Number         0  rtx_lib.o(.text._mutex_free)
    [Anonymous Symbol]                       0x1a001860   Section        0  rtx_lib.o(.text._mutex_free)
    __tagsym$$used.0                         0x1a001874   Number         0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x1a001874   Section        0  rtx_lib.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x1a0018a8   Section        0  rtx_lib.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x1a0018b0   Section        0  retarget_io.o(.text._sys_close)
    [Anonymous Symbol]                       0x1a0018fc   Section        0  retarget_io.o(.text._sys_open)
    [Anonymous Symbol]                       0x1a001980   Section        0  retarget_io.o(.text._sys_seek)
    app_main                                 0x1a0019d5   Thumb Code     8  main.o(.text.app_main)
    [Anonymous Symbol]                       0x1a0019d4   Section        0  main.o(.text.app_main)
    [Anonymous Symbol]                       0x1a0019dc   Section        0  main.o(.text.increment)
    [Anonymous Symbol]                       0x1a001a0c   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x1a001a2c   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x1a001a30   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x1a001a58   Number         4  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_1                             0x1a001a5c   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x1a001a60   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x1a001a88   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x1a001a8c   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x1a001aac   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x1a001ab0   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.5_0                             0x1a001b1c   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x1a001b20   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.4_0                             0x1a001b40   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x1a001b44   Section        0  rtx_mutex.o(.text.osMutexDelete)
    __arm_cp.7_0                             0x1a001b64   Number         4  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x1a001b68   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x1a001b70   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x1a001b74   Section        0  rtx_kernel.o(.text.osRtxKernelPreInit)
    [Anonymous Symbol]                       0x1a001b76   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x1a001be2   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x1a001c18   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x1a001c52   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x1a001c9c   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x1a001d24   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x1a001d90   Number         4  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayInsert                   0x1a001d95   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x1a001d94   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.13_0                            0x1a001e10   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x1a001e14   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadJoinWakeup                    0x1a001e65   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x1a001e64   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    osRtxThreadPostProcess                   0x1a001e83   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x1a001e82   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x1a001eac   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x1a001ebc   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x1a001ef4   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x1a001f68   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x1a001f80   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x1a001f84   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.18_1                            0x1a001fa4   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x1a001fa8   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.25_0                            0x1a001fc8   Number         4  rtx_thread.o(.text.osThreadYield)
    os_kernel_is_active                      0x1a001fcd   Thumb Code    54  rtx_lib.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x1a001fcc   Section        0  rtx_lib.o(.text.os_kernel_is_active)
    stdout_putchar                           0x1a002005   Thumb Code    16  retarget_io.o(.text.stdout_putchar)
    [Anonymous Symbol]                       0x1a002004   Section        0  retarget_io.o(.text.stdout_putchar)
    svcRtxKernelGetState                     0x1a002015   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x1a002014   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    __arm_cp.6_0                             0x1a00201c   Number         4  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x1a002021   Thumb Code   244  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x1a002020   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_0                            0x1a002114   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_1                            0x1a002118   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.21_2                            0x1a00211c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxMessageQueueNew                    0x1a002121   Thumb Code   272  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x1a002120   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x1a002230   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x1a002234   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x1a002239   Thumb Code   168  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x1a002238   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.20_0                            0x1a0022e0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexNew                           0x1a0022e5   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x1a0022e4   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.8_0                             0x1a002348   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxThreadExit                         0x1a00234d   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x1a00234c   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadGetId                        0x1a002395   Thumb Code     8  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x1a002394   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.19_0                            0x1a00239c   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x1a0023a1   Thumb Code   472  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x1a0023a0   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_1                            0x1a002578   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_2                            0x1a00257c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_3                            0x1a002580   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.15_4                            0x1a002584   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadYield                        0x1a002589   Thumb Code    52  rtx_thread.o(.text.svcRtxThreadYield)
    [Anonymous Symbol]                       0x1a002588   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.46_0                            0x1a0025bc   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    CL$$btod_d2e                             0x1a0025c0   Section       62  btod.o(CL$$btod_d2e)
    CL$$btod_d2e_denorm_low                  0x1a0025fe   Section       70  btod.o(CL$$btod_d2e_denorm_low)
    CL$$btod_d2e_norm_op1                    0x1a002644   Section       96  btod.o(CL$$btod_d2e_norm_op1)
    CL$$btod_div_common                      0x1a0026a4   Section      824  btod.o(CL$$btod_div_common)
    CL$$btod_e2e                             0x1a0029dc   Section      220  btod.o(CL$$btod_e2e)
    CL$$btod_mult_common                     0x1a002ab8   Section      580  btod.o(CL$$btod_mult_common)
    Long Thumb to Thumb Veneer to OUTLINED_FUNCTION_0 0x1a002e97   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to OUTLINED_FUNCTION_0 0x1a002eab   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadDestroy 0x1a002ee7   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    i._is_digit                              0x1a002efa   Section        0  __printf_wp.o(i._is_digit)
    locale$$code                             0x1a002f08   Section       44  lc_ctype_c.o(locale$$code)
    $v0                                      0x1a002f34   Number         0  printf2.o(x$fpl$printf2)
    x$fpl$printf2                            0x1a002f34   Section        4  printf2.o(x$fpl$printf2)
    initial_mbstate                          0x1a002f38   Data           8  _printf_wctomb.o(.constdata)
    .constdata                               0x1a002f38   Section        8  _printf_wctomb.o(.constdata)
    maptable                                 0x1a002f40   Data          17  __printf_flags_ss_wp.o(.constdata)
    .constdata                               0x1a002f40   Section       17  __printf_flags_ss_wp.o(.constdata)
    lc_hextab                                0x1a002f51   Data          19  _printf_fp_hex.o(.constdata)
    .constdata                               0x1a002f51   Section       38  _printf_fp_hex.o(.constdata)
    uc_hextab                                0x1a002f64   Data          19  _printf_fp_hex.o(.constdata)
    tenpwrs_x                                0x1a002f78   Data          60  bigflt0.o(.constdata)
    .constdata                               0x1a002f78   Section      148  bigflt0.o(.constdata)
    tenpwrs_i                                0x1a002fb4   Data          64  bigflt0.o(.constdata)
    emcdivby2_opc                            0x1a00301c   Data          20  system_lpc43xx.o(.rodata.emcdivby2_opc)
    [Anonymous Symbol]                       0x1a00301c   Section        0  system_lpc43xx.o(.rodata.emcdivby2_opc)
    .L.str                                   0x1a003034   Data           4  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x1a003034   Section        0  main.o(.rodata.str1.1)
    locale$$data                             0x1a003078   Section       28  lc_numeric_c.o(locale$$data)
    __lcnum_c_name                           0x1a00307c   Data           2  lc_numeric_c.o(locale$$data)
    __lcnum_c_start                          0x1a003084   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_point                          0x1a003090   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_thousands                      0x1a003092   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_grouping                       0x1a003093   Data           0  lc_numeric_c.o(locale$$data)
    __lcnum_c_end                            0x1a003094   Data           0  lc_numeric_c.o(locale$$data)
    .ARM.Collect$$_printf_percent$$00000000  0x1b000000   Section        0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    .ARM.Collect$$_printf_percent$$00000001  0x1b000000   Section        6  _printf_n.o(.ARM.Collect$$_printf_percent$$00000001)
    .ARM.Collect$$_printf_percent$$00000002  0x1b000006   Section        6  _printf_p.o(.ARM.Collect$$_printf_percent$$00000002)
    .ARM.Collect$$_printf_percent$$00000003  0x1b00000c   Section        6  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    .ARM.Collect$$_printf_percent$$00000004  0x1b000012   Section        6  _printf_e.o(.ARM.Collect$$_printf_percent$$00000004)
    .ARM.Collect$$_printf_percent$$00000005  0x1b000018   Section        6  _printf_g.o(.ARM.Collect$$_printf_percent$$00000005)
    .ARM.Collect$$_printf_percent$$00000006  0x1b00001e   Section        6  _printf_a.o(.ARM.Collect$$_printf_percent$$00000006)
    .ARM.Collect$$_printf_percent$$00000007  0x1b000024   Section       10  _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007)
    .ARM.Collect$$_printf_percent$$00000008  0x1b00002e   Section        6  _printf_i.o(.ARM.Collect$$_printf_percent$$00000008)
    .ARM.Collect$$_printf_percent$$00000009  0x1b000034   Section        6  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    .ARM.Collect$$_printf_percent$$0000000A  0x1b00003a   Section        6  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    .ARM.Collect$$_printf_percent$$0000000B  0x1b000040   Section        6  _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B)
    .ARM.Collect$$_printf_percent$$0000000C  0x1b000046   Section        6  _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C)
    .ARM.Collect$$_printf_percent$$0000000D  0x1b00004c   Section        6  _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D)
    .ARM.Collect$$_printf_percent$$0000000E  0x1b000052   Section        6  _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E)
    .ARM.Collect$$_printf_percent$$0000000F  0x1b000058   Section        6  _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F)
    .ARM.Collect$$_printf_percent$$00000010  0x1b00005e   Section        6  _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010)
    .ARM.Collect$$_printf_percent$$00000011  0x1b000064   Section        6  _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011)
    .ARM.Collect$$_printf_percent$$00000012  0x1b00006a   Section       10  _printf_l.o(.ARM.Collect$$_printf_percent$$00000012)
    .ARM.Collect$$_printf_percent$$00000013  0x1b000074   Section        6  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    .ARM.Collect$$_printf_percent$$00000014  0x1b00007a   Section        6  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    .ARM.Collect$$_printf_percent$$00000015  0x1b000080   Section        6  _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015)
    .ARM.Collect$$_printf_percent$$00000016  0x1b000086   Section        6  _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016)
    .ARM.Collect$$_printf_percent$$00000017  0x1b00008c   Section        4  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    .ARM.Collect$$libshutdown$$00000000      0x1b000090   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x1b000092   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000003      0x1b000092   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    .ARM.Collect$$libshutdown$$00000004      0x1b000096   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x1b000096   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x1b000096   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x1b000096   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000D      0x1b000096   Section        4  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    .ARM.Collect$$libshutdown$$0000000F      0x1b00009a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x1b00009a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtexit$$00000000           0x1b00009c   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x1b00009e   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x1b00009e   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x1b0000a2   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x1b0000a8   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x1b000138   Section      124  strcmpv7em.o(.text)
    .text                                    0x1b0001b4   Section        0  _printf_pad.o(.text)
    .text                                    0x1b000202   Section        0  _printf_truncate.o(.text)
    .text                                    0x1b000226   Section        0  _printf_str.o(.text)
    .text                                    0x1b000278   Section        0  _printf_wctomb.o(.text)
    .text                                    0x1b000334   Section        0  _printf_longlong_dec.o(.text)
    _printf_longlong_oct_internal            0x1b0003b1   Thumb Code     0  _printf_oct_int_ll.o(.text)
    .text                                    0x1b0003b0   Section        0  _printf_oct_int_ll.o(.text)
    _printf_hex_common                       0x1b000421   Thumb Code     0  _printf_hex_int_ll_ptr.o(.text)
    .text                                    0x1b000420   Section        0  _printf_hex_int_ll_ptr.o(.text)
    .text                                    0x1b0004b4   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x1b000518   Section        0  _printf_fp_hex.o(.text)
    .text                                    0x1b000814   Section        0  _printf_char.o(.text)
    .text                                    0x1b000840   Section        0  initio_locked.o(.text)
    .text                                    0x1b000a08   Section        0  _c16rtomb.o(.text)
    .text                                    0x1b000a50   Section        0  h1_free_threads.o(.text)
    .text                                    0x1b000ac8   Section        0  bigflt0.o(.text)
    .text                                    0x1b000bac   Section        0  flsbuf.o(.text)
    .text                                    0x1b000d8e   Section        0  fclose.o(.text)
    .text                                    0x1b000dda   Section        0  setvbuf_locked.o(.text)
    .text                                    0x1b000e42   Section        0  defsig_rtred_outer.o(.text)
    .text                                    0x1b000e50   Section        0  init_alloc.o(.text)
    .text                                    0x1b000edc   Section        0  fseek.o(.text)
    .text                                    0x1b000fd4   Section        0  defsig_rtred_inner.o(.text)
    .text                                    0x1b001008   Section        0  sys_exit.o(.text)
    .text                                    0x1b001014   Section        0  maybetermalloc2.o(.text)
    .text                                    0x1b001014   Section        0  h1_init_threads.o(.text)
    .text                                    0x1b001026   Section        0  defsig_general.o(.text)
    .text                                    0x1b001058   Section        0  sys_wrch.o(.text)
    .text                                    0x1b001066   Section        0  indicate_semi.o(.text)
    .text                                    0x1b001066   Section        0  term_alloc.o(.text)
    .text                                    0x1b001078   Section        0  defsig_rtmem_inner.o(.text)
    [Anonymous Symbol]                       0x1b0010c8   Section        0  gpio_lpc43xx.o(.text.GPIO_PinWrite)
    GetClkSel                                0x1b001109   Thumb Code   262  system_lpc43xx.o(.text.GetClkSel)
    [Anonymous Symbol]                       0x1b001108   Section        0  system_lpc43xx.o(.text.GetClkSel)
    [Anonymous Symbol]                       0x1b001210   Section        0  system_lpc43xx.o(.text.GetClockFreq)
    GetPLL1Param                             0x1b001355   Thumb Code   130  system_lpc43xx.o(.text.GetPLL1Param)
    [Anonymous Symbol]                       0x1b001354   Section        0  system_lpc43xx.o(.text.GetPLL1Param)
    [Anonymous Symbol]                       0x1b0013d8   Section        0  retarget_io.o(.text.ITM_SendChar)
    [Anonymous Symbol]                       0x1b00141c   Section        0  main.o(.text.Init_TIMER0)
    [Anonymous Symbol]                       0x1b001474   Section        0  led_mcb4300.o(.text.LED_Off)
    [Anonymous Symbol]                       0x1b0014b0   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x1b0014b8   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x1b0014c0   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x1b0014f0   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x1b0014f4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x1b0014f8   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x1b0014fc   Number         4  os_systick.o(.text.OS_Tick_Setup)
    OUTLINED_FUNCTION_0                      0x1b001501   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x1b001500   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x1b00150d   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x1b00150c   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x1b001514   Section        0  scu_lpc43xx.o(.text.SCU_PinConfigure)
    SetClock                                 0x1b001565   Thumb Code   504  system_lpc43xx.o(.text.SetClock)
    [Anonymous Symbol]                       0x1b001564   Section        0  system_lpc43xx.o(.text.SetClock)
    [Anonymous Symbol]                       0x1b00175c   Section        0  system_lpc43xx.o(.text.SystemInit)
    SystemInit_ExtMemCtl                     0x1b0017b1   Thumb Code  1968  system_lpc43xx.o(.text.SystemInit_ExtMemCtl)
    [Anonymous Symbol]                       0x1b0017b0   Section        0  system_lpc43xx.o(.text.SystemInit_ExtMemCtl)
    [Anonymous Symbol]                       0x1b001f60   Section        0  main.o(.text.Thread)
    __tagsym$$used.2                         0x1b001f9c   Number         0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x1b001f9c   Section        0  rtx_lib.o(.text._mutex_release)
    [Anonymous Symbol]                       0x1b001fb8   Section        0  retarget_io.o(.text._sys_flen)
    [Anonymous Symbol]                       0x1b002000   Section        0  retarget_io.o(.text._sys_istty)
    [Anonymous Symbol]                       0x1b002048   Section        0  retarget_io.o(.text._sys_write)
    [Anonymous Symbol]                       0x1b0020c0   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x1b0020f4   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.4_0                             0x1b002170   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x1b002174   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x1b002194   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x1b002198   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.5_0                             0x1b0021b8   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x1b0021bc   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x1b0021ea   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x1b00222c   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x1b002276   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x1b0022af   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x1b0022ae   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x1b002358   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x1b002378   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxThreadBlock                         0x1b0023c1   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x1b0023c0   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayRemove                   0x1b0023f5   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x1b0023f4   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDestroy                       0x1b002431   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x1b002430   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x1b002450   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x1b0024a1   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x1b0024a0   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x1b0024f4   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x1b002506   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x1b002532   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x1b002546   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x1b00256c   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x1b002580   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_0                            0x1b0025b0   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.14_1                            0x1b0025b4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x1b0025b8   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x1b0025c4   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x1b0025f4   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x1b002615   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x1b002614   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x1b002680   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x1b002684   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x1b00268c   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x1b002690   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.16_0                            0x1b0026b0   Number         4  rtx_thread.o(.text.osThreadNew)
    svcRtxDelay                              0x1b0026b5   Thumb Code    22  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x1b0026b4   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelStart                        0x1b0026cd   Thumb Code   124  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x1b0026cc   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_0                            0x1b002748   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_1                            0x1b00274c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_2                            0x1b002750   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.22_3                            0x1b002754   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x1b002759   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x1b002758   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x1b002820   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMutexAcquire                       0x1b002825   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x1b002824   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.10_0                            0x1b0028b0   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x1b0028b5   Thumb Code   172  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x1b0028b4   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    __arm_cp.13_0                            0x1b002960   Number         4  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexRelease                       0x1b002965   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x1b002964   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.11_0                            0x1b002a14   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    CL$$btod_ediv                            0x1b002a18   Section       42  btod.o(CL$$btod_ediv)
    CL$$btod_emul                            0x1b002a42   Section       42  btod.o(CL$$btod_emul)
    Long Thumb to Thumb Veneer to __NVIC_EnableIRQ 0x1b002b71   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to WaitUs     0x1b002b8f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to os_kernel_is_active 0x1b002bcb   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to stdout_putchar 0x1b002bd5   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to MessageQueueRemove 0x1b002c11   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to OUTLINED_FUNCTION_0 0x1b002c1b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to MessageQueuePut 0x1b002c25   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to svcRtxMessageQueueNew 0x1b002c2f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to svcRtxThreadNew 0x1b002c43   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to TimerInsert 0x1b002c61   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to MessageQueueGet 0x1b002c7f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to OUTLINED_FUNCTION_1 0x1b002c89   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    i.__ARM_fpclassify                       0x1b002cba   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.fputc                                  0x1b002cea   Section        0  fputc.o(i.fputc)
    locale$$code                             0x1b002d08   Section       44  lc_numeric_c.o(locale$$code)
    $v0                                      0x1b002d34   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x1b002d34   Section       26  fpinit.o(x$fpl$fpinit)
    $v0                                      0x1b002d4e   Number         0  printf1.o(x$fpl$printf1)
    x$fpl$printf1                            0x1b002d4e   Section        4  printf1.o(x$fpl$printf1)
    uc_hextab                                0x1b002d52   Data          20  _printf_hex_int_ll_ptr.o(.constdata)
    .constdata                               0x1b002d52   Section       40  _printf_hex_int_ll_ptr.o(.constdata)
    x$fpl$usenofp                            0x1b002d52   Section        0  usenofp.o(x$fpl$usenofp)
    lc_hextab                                0x1b002d66   Data          20  _printf_hex_int_ll_ptr.o(.constdata)
    __tagsym$$used.4                         0x1b002d7c   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.5                         0x1b002dec   Number         0  rtx_lib.o(.rodata)
    LED_GPIO                                 0x1b002e24   Data          16  led_mcb4300.o(.rodata.LED_GPIO)
    [Anonymous Symbol]                       0x1b002e24   Section        0  led_mcb4300.o(.rodata.LED_GPIO)
    LED_PIN                                  0x1b002e34   Data          64  led_mcb4300.o(.rodata.LED_PIN)
    [Anonymous Symbol]                       0x1b002e34   Section        0  led_mcb4300.o(.rodata.LED_PIN)
    os_idle_thread_attr                      0x1b002e7c   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x1b002e7c   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x1b002ea0   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x1b002ea0   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x1b002eb8   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x1b002eb8   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    .L.str                                   0x1b002edc   Data           7  retarget_io.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x1b002edc   Section        0  retarget_io.o(.rodata.str1.1)
    .L.str.2                                 0x1b002ee3   Data           8  retarget_io.o(.rodata.str1.1)
    .L.str.1                                 0x1b002eeb   Data           8  retarget_io.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x1b002ef4   Section        0  rtx_kernel.o(.rodata.str1.4)
    locale$$data                             0x1b002f00   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x1b002f04   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x1b002f0c   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x1b003010   Data           0  lc_ctype_c.o(locale$$data)
    .data                                    0x20000000   Section        4  stdio_streams.o(.data)
    .data                                    0x20000004   Section        4  stdio_streams.o(.data)
    .data                                    0x20000008   Section        4  streamlock.o(.data)
    .bss                                     0x20000010   Section       84  stdio_streams.o(.bss)
    .bss                                     0x20000064   Section       84  stdio_streams.o(.bss)
    os_isr_queue                             0x200000b8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x200000b8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x200000f8   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x200080f8   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x200080f8   Section        0  os_systick.o(.bss.os)
    os_libspace_id                           0x200080fc   Data          16  rtx_lib.o(.bss.os.libspace)
    [Anonymous Symbol]                       0x200080fc   Section        0  rtx_lib.o(.bss.os.libspace)
    os_libspace                              0x2000810c   Data         480  rtx_lib.o(.bss.os.libspace)
    os_timer_mq_cb                           0x200082ec   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x200082ec   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_idle_thread_cb                        0x20008320   Data          68  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x20008320   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20008364   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x200083a8   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x200083a8   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x200085a8   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x200085a8   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    x                                        0x200087ac   Data           4  main.o(.bss.x)
    [Anonymous Symbol]                       0x200087ac   Section        0  main.o(.bss.x)
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$IEEEJ$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printf_stubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printf_stubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    __user_heap_extent                        - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _printf_mbtowc                            - Undefined Weak Reference
    _printf_wc                                - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    __aeabi_stderr                           0x10000000   Data           4  stdio_streams.o(.data)
    osRtxInfo                                0x10000004   Data         164  rtx_kernel.o(.data.os)
    __stdout                                 0x100000a8   Data          84  stdio_streams.o(.bss)
    __libspace_start                         0x100000fc   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x1000015c   Data           0  libspace.o(.bss)
    __Vectors                                0x1a000000   Data           4  startup_lpc43xx.o(RESET)
    __main                                   0x1a000301   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x1a000309   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x1a000309   Thumb Code    84  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x1a000309   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_loop                       0x1a000313   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x1a000365   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_null                       0x1a000381   Thumb Code     2  __scatter.o(!!handler_null)
    __scatterload_zeroinit                   0x1a000385   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x1a0003a1   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x1a0003a3   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_heap_2                     0x1a0003a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000007)
    __rt_lib_init_preinit_1                  0x1a0003a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_relocate_pie_1             0x1a0003a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_heap_1                     0x1a0003af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_common                  0x1a0003af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_rand_1                     0x1a0003af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_user_alloc_1               0x1a0003af   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_lc_collate_1               0x1a0003b5   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_2                 0x1a0003b5   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000014)
    __rt_lib_init_lc_ctype_1                 0x1a0003c1   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x1a0003c1   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_2               0x1a0003c1   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000018)
    __rt_lib_init_atexit_1                   0x1a0003cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x1a0003cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_fp_trap_1                  0x1a0003cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x1a0003cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_lc_numeric_1               0x1a0003cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x1a0003cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_signal_1                   0x1a0003cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_2                    0x1a0003cb   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000026)
    __rt_lib_init_alloca_1                   0x1a0003cf   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x1a0003cf   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_cpp_1                      0x1a0003cf   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x1a0003cf   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_return                     0x1a0003cf   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_stdio_1                    0x1a0003cf   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_entry                               0x1a0003d1   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x1a0003d1   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x1a0003d1   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x1a0003d7   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x1a0003df   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x1a0003e3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x1a0003e3   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Reset_Handler                            0x1a0003ed   Thumb Code     8  startup_lpc43xx.o(.text)
    NMI_Handler                              0x1a0003f5   Thumb Code     2  startup_lpc43xx.o(.text)
    HardFault_Handler                        0x1a0003f7   Thumb Code     2  startup_lpc43xx.o(.text)
    MemManage_Handler                        0x1a0003f9   Thumb Code     2  startup_lpc43xx.o(.text)
    BusFault_Handler                         0x1a0003fb   Thumb Code     2  startup_lpc43xx.o(.text)
    UsageFault_Handler                       0x1a0003fd   Thumb Code     2  startup_lpc43xx.o(.text)
    DebugMon_Handler                         0x1a000401   Thumb Code     2  startup_lpc43xx.o(.text)
    ADC0_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    ADC1_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    ADCHS_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    ATIMER_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    C_CAN0_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    C_CAN1_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    DAC_IRQHandler                           0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    DMA_IRQHandler                           0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    ETHERNET_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    EVENTROUTER_IRQHandler                   0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    FLASHEEPROM_IRQHandler                   0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    GINT0_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    GINT1_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    I2C0_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    I2C1_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    I2S0_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    I2S1_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    LCD_IRQHandler                           0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    M0APP_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    M0SUB_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    MCPWM_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    PIN_INT0_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    PIN_INT1_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    PIN_INT2_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    PIN_INT3_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    PIN_INT4_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    PIN_INT5_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    PIN_INT6_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    PIN_INT7_IRQHandler                      0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    QEI_IRQHandler                           0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    RITIMER_IRQHandler                       0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    RTC_IRQHandler                           0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    SCT_IRQHandler                           0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    SDIO_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    SGPIO_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    SPIFI_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    SPI_IRQHandler                           0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    SSP0_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    SSP1_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    TIMER1_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    TIMER2_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    TIMER3_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    UART1_IRQHandler                         0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    USART0_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    USART2_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    USART3_IRQHandler                        0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    USB0_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    USB1_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    WWDT_IRQHandler                          0x1a000407   Thumb Code     0  startup_lpc43xx.o(.text)
    __user_initial_stackheap                 0x1a000409   Thumb Code     0  startup_lpc43xx.o(.text)
    SVC_Handler                              0x1a00042d   Thumb Code   154  irq_armv7m.o(.text)
    PendSV_Handler                           0x1a0004c7   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x1a0004d7   Thumb Code    16  irq_armv7m.o(.text)
    __aeabi_uldivmod                         0x1a0004f5   Thumb Code     0  lludivv7m.o(.text)
    _ll_udiv                                 0x1a0004f5   Thumb Code   240  lludivv7m.o(.text)
    printf                                   0x1a0005e5   Thumb Code    20  printf.o(.text)
    __aeabi_memclr                           0x1a0005fd   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x1a0005fd   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x1a000601   Thumb Code    64  rt_memclr.o(.text)
    __aeabi_memclr4                          0x1a000641   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x1a000641   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x1a000641   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x1a000645   Thumb Code    74  rt_memclr_w.o(.text)
    __use_two_region_memory                  0x1a00068f   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow                         0x1a000691   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand                         0x1a000693   Thumb Code     2  heapauxi.o(.text)
    _printf_int_dec                          0x1a000695   Thumb Code   104  _printf_dec.o(.text)
    _printf_charcount                        0x1a00070d   Thumb Code    40  _printf_charcount.o(.text)
    __printf                                 0x1a000735   Thumb Code   388  __printf_flags_ss_wp.o(.text)
    _ll_udiv10                               0x1a0008bd   Thumb Code   138  lludiv10.o(.text)
    _printf_int_common                       0x1a000947   Thumb Code   178  _printf_intcommon.o(.text)
    _printf_fp_dec_real                      0x1a000ba9   Thumb Code   620  _printf_fp_dec.o(.text)
    _printf_char_common                      0x1a000e1f   Thumb Code    32  _printf_char_common.o(.text)
    _printf_lcs_common                       0x1a000e45   Thumb Code    20  _printf_wchar.o(.text)
    _printf_wchar                            0x1a000e59   Thumb Code    16  _printf_wchar.o(.text)
    _printf_wstring                          0x1a000e69   Thumb Code     8  _printf_wchar.o(.text)
    __user_setup_stackheap                   0x1a000e71   Thumb Code    74  sys_stackheap_outer.o(.text)
    __rt_ctype_table                         0x1a000ebd   Thumb Code    16  rt_ctype_table.o(.text)
    __rt_locale                              0x1a000ecd   Thumb Code    10  rt_locale_twolibspace.o(.text)
    _printf_fp_infnan                        0x1a000ed9   Thumb Code   112  _printf_fp_infnan.o(.text)
    freopen                                  0x1a00100d   Thumb Code    42  fopen_locked.o(.text)
    _fopen$locked                            0x1a001037   Thumb Code   100  fopen_locked.o(.text)
    exit                                     0x1a0010a5   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x1a0010b9   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x1a0010b9   Thumb Code     0  libspace.o(.text)
    __rt_heap_descriptor                     0x1a0010c1   Thumb Code    10  rt_heap_descriptor_twolibspace.o(.text)
    __use_no_heap                            0x1a0010cb   Thumb Code     2  hguard.o(.text)
    __heap$guard                             0x1a0010cd   Thumb Code     2  hguard.o(.text)
    malloc_internal$concurrent               0x1a0010df   Thumb Code   130  h1_alloc_threads.o(.text)
    malloc                                   0x1a001161   Thumb Code    20  h1_alloc_threads.o(.text)
    _printf_char_file                        0x1a001175   Thumb Code    58  _printf_char_file_locked.o(.text)
    _seterr                                  0x1a0011b5   Thumb Code    20  stdio.o(.text)
    _writebuf                                0x1a0011c9   Thumb Code   108  stdio.o(.text)
    _fflush                                  0x1a001235   Thumb Code    70  stdio.o(.text)
    _deferredlazyseek                        0x1a00127b   Thumb Code    60  stdio.o(.text)
    __sig_exit                               0x1a0012bd   Thumb Code    10  defsig_exit.o(.text)
    __Heap_ProvideMemory                     0x1a0012d5   Thumb Code    68  h1_extend_threads.o(.text)
    _ftell_internal                          0x1a001319   Thumb Code    66  ftell.o(.text)
    ftell                                    0x1a001319   Thumb Code     0  ftell.o(.text)
    __rt_SIGRTMEM                            0x1a00135b   Thumb Code    14  defsig_rtmem_outer.o(.text)
    __I$use$semihosting                      0x1a001369   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x1a001369   Thumb Code     2  use_no_semi.o(.text)
    __aeabi_errno_addr                       0x1a00136b   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x1a00136b   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x1a00136b   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __Heap_Finalize                          0x1a00136f   Thumb Code    10  h1_final_threads.o(.text)
    _fp_init                                 0x1a001379   Thumb Code    22  rtx_lib.o(.text.$Sub$$_fp_init)
    GPIO_PortClock                           0x1a001391   Thumb Code   132  gpio_lpc43xx.o(.text.GPIO_PortClock)
    GPIO_SetDir                              0x1a001415   Thumb Code    78  gpio_lpc43xx.o(.text.GPIO_SetDir)
    Init_Thread                              0x1a001465   Thumb Code    58  main.o(.text.Init_Thread)
    LED_Initialize                           0x1a0014a1   Thumb Code   114  led_mcb4300.o(.text.LED_Initialize)
    LED_On                                   0x1a001515   Thumb Code    60  led_mcb4300.o(.text.LED_On)
    OS_Tick_Enable                           0x1a001605   Thumb Code    32  os_systick.o(.text.OS_Tick_Enable)
    SystemCoreClockUpdate                    0x1a001649   Thumb Code    38  system_lpc43xx.o(.text.SystemCoreClockUpdate)
    TIMER0_IRQHandler                        0x1a001671   Thumb Code    20  main.o(.text.TIMER0_IRQHandler)
    __user_perthread_libspace                0x1a0017a9   Thumb Code   150  rtx_lib.o(.text.__user_perthread_libspace)
    _mutex_acquire                           0x1a001841   Thumb Code    32  rtx_lib.o(.text._mutex_acquire)
    _mutex_free                              0x1a001861   Thumb Code    18  rtx_lib.o(.text._mutex_free)
    _mutex_initialize                        0x1a001875   Thumb Code    50  rtx_lib.o(.text._mutex_initialize)
    _platform_post_stackheap_init            0x1a0018a9   Thumb Code     8  rtx_lib.o(.text._platform_post_stackheap_init)
    _sys_close                               0x1a0018b1   Thumb Code    74  retarget_io.o(.text._sys_close)
    _sys_open                                0x1a0018fd   Thumb Code   132  retarget_io.o(.text._sys_open)
    _sys_seek                                0x1a001981   Thumb Code    82  retarget_io.o(.text._sys_seek)
    increment                                0x1a0019dd   Thumb Code    46  main.o(.text.increment)
    osDelay                                  0x1a001a0d   Thumb Code    32  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x1a001a31   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x1a001a61   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x1a001a8d   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x1a001ab1   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMutexAcquire                           0x1a001b21   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x1a001b45   Thumb Code    32  rtx_mutex.o(.text.osMutexDelete)
    osRtxIdleThread                          0x1a001b69   Thumb Code     8  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelErrorNotify                   0x1a001b71   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxKernelPreInit                       0x1a001b75   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelPreInit)
    osRtxMemoryAlloc                         0x1a001b77   Thumb Code   108  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryInit                          0x1a001be3   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x1a001c19   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMutexOwnerRestore                   0x1a001c53   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x1a001c9d   Thumb Code   136  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x1a001d25   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x1a001e15   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadReadyPut                      0x1a001ead   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadWaitEnter                     0x1a001ebd   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxTick_Handler                        0x1a001ef5   Thumb Code   116  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x1a001f69   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osThreadGetId                            0x1a001f85   Thumb Code    32  rtx_thread.o(.text.osThreadGetId)
    osThreadYield                            0x1a001fa9   Thumb Code    32  rtx_thread.o(.text.osThreadYield)
    _btod_d2e                                0x1a0025c1   Thumb Code    62  btod.o(CL$$btod_d2e)
    _d2e_denorm_low                          0x1a0025ff   Thumb Code    70  btod.o(CL$$btod_d2e_denorm_low)
    _d2e_norm_op1                            0x1a002645   Thumb Code    96  btod.o(CL$$btod_d2e_norm_op1)
    __btod_div_common                        0x1a0026a5   Thumb Code   696  btod.o(CL$$btod_div_common)
    _e2e                                     0x1a0029dd   Thumb Code   220  btod.o(CL$$btod_e2e)
    __btod_mult_common                       0x1a002ab9   Thumb Code   580  btod.o(CL$$btod_mult_common)
    Long Thumb to Thumb Veneer to _init_alloc 0x1a002cfd   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _get_lc_numeric 0x1a002d07   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _initio    0x1a002d11   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to main       0x1a002d1b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_truncate_signed 0x1a002d25   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_truncate_unsigned 0x1a002d2f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_percent 0x1a002d39   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_pre_padding 0x1a002d43   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_post_padding 0x1a002d4d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _btod_etento 0x1a002d57   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _btod_ediv 0x1a002d61   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _btod_emul 0x1a002d6b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __ARM_fpclassify 0x1a002d75   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_wctomb 0x1a002d7f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _fclose_internal 0x1a002d89   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _fseek     0x1a002d93   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _mutex_release 0x1a002d9d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __rt_exit  0x1a002da7   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __Heap_Full 0x1a002db1   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _sys_write 0x1a002dbb   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _sys_exit  0x1a002dc5   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to free_internal$concurrent 0x1a002dcf   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __rt_SIGRTMEM_inner 0x1a002dd9   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to $Super$$_fp_init 0x1a002de3   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osThreadNew 0x1a002ded   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to SCU_PinConfigure 0x1a002df7   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to GPIO_PinWrite 0x1a002e01   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadWaitExit 0x1a002e0b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadListGet 0x1a002e15   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to GetClockFreq 0x1a002e1f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osMutexNew 0x1a002e29   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to strcmp     0x1a002e33   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __aeabi_memcpy 0x1a002e3d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxErrorNotify 0x1a002e47   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadListSort 0x1a002e51   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadDispatch 0x1a002e5b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadListRemove 0x1a002e65   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadListPut 0x1a002e6f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to OS_Tick_AcknowledgeIRQ 0x1a002e79   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadSwitch 0x1a002e83   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxMessageQueueTimerSetup 0x1a002e8d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to ITM_SendChar 0x1a002ea1   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxMemoryPoolFree 0x1a002eb5   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxMemoryFree 0x1a002ebf   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxMemoryPoolInit 0x1a002ec9   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadRegPtr 0x1a002ed3   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxMutexOwnerRelease 0x1a002edd   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_fp_hex_real 0x1a002ef1   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    _is_digit                                0x1a002efb   Thumb Code    14  __printf_wp.o(i._is_digit)
    _get_lc_ctype                            0x1a002f09   Thumb Code    44  lc_ctype_c.o(locale$$code)
    _printf_fp_hex                           0x1a002f35   Thumb Code     4  printf2.o(x$fpl$printf2)
    __stderr_name                            0x1a00300c   Data           8  retarget_io.o(.rodata.__stderr_name)
    __stdout_name                            0x1a003014   Data           8  retarget_io.o(.rodata.__stdout_name)
    osRtxUserSVC                             0x1a003030   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x1a003038   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x1a003078   Number         0  anon$$obj.o(Region$$Table)
    _printf_n                                0x1b000001   Thumb Code     0  _printf_n.o(.ARM.Collect$$_printf_percent$$00000001)
    _printf_percent                          0x1b000001   Thumb Code     0  _printf_percent.o(.ARM.Collect$$_printf_percent$$00000000)
    _printf_p                                0x1b000007   Thumb Code     0  _printf_p.o(.ARM.Collect$$_printf_percent$$00000002)
    _printf_f                                0x1b00000d   Thumb Code     0  _printf_f.o(.ARM.Collect$$_printf_percent$$00000003)
    _printf_e                                0x1b000013   Thumb Code     0  _printf_e.o(.ARM.Collect$$_printf_percent$$00000004)
    _printf_g                                0x1b000019   Thumb Code     0  _printf_g.o(.ARM.Collect$$_printf_percent$$00000005)
    _printf_a                                0x1b00001f   Thumb Code     0  _printf_a.o(.ARM.Collect$$_printf_percent$$00000006)
    _printf_ll                               0x1b000025   Thumb Code     0  _printf_ll.o(.ARM.Collect$$_printf_percent$$00000007)
    _printf_i                                0x1b00002f   Thumb Code     0  _printf_i.o(.ARM.Collect$$_printf_percent$$00000008)
    _printf_d                                0x1b000035   Thumb Code     0  _printf_d.o(.ARM.Collect$$_printf_percent$$00000009)
    _printf_u                                0x1b00003b   Thumb Code     0  _printf_u.o(.ARM.Collect$$_printf_percent$$0000000A)
    _printf_o                                0x1b000041   Thumb Code     0  _printf_o.o(.ARM.Collect$$_printf_percent$$0000000B)
    _printf_x                                0x1b000047   Thumb Code     0  _printf_x.o(.ARM.Collect$$_printf_percent$$0000000C)
    _printf_lli                              0x1b00004d   Thumb Code     0  _printf_lli.o(.ARM.Collect$$_printf_percent$$0000000D)
    _printf_lld                              0x1b000053   Thumb Code     0  _printf_lld.o(.ARM.Collect$$_printf_percent$$0000000E)
    _printf_llu                              0x1b000059   Thumb Code     0  _printf_llu.o(.ARM.Collect$$_printf_percent$$0000000F)
    _printf_llo                              0x1b00005f   Thumb Code     0  _printf_llo.o(.ARM.Collect$$_printf_percent$$00000010)
    _printf_llx                              0x1b000065   Thumb Code     0  _printf_llx.o(.ARM.Collect$$_printf_percent$$00000011)
    _printf_l                                0x1b00006b   Thumb Code     0  _printf_l.o(.ARM.Collect$$_printf_percent$$00000012)
    _printf_c                                0x1b000075   Thumb Code     0  _printf_c.o(.ARM.Collect$$_printf_percent$$00000013)
    _printf_s                                0x1b00007b   Thumb Code     0  _printf_s.o(.ARM.Collect$$_printf_percent$$00000014)
    _printf_lc                               0x1b000081   Thumb Code     0  _printf_lc.o(.ARM.Collect$$_printf_percent$$00000015)
    _printf_ls                               0x1b000087   Thumb Code     0  _printf_ls.o(.ARM.Collect$$_printf_percent$$00000016)
    _printf_percent_end                      0x1b00008d   Thumb Code     0  _printf_percent_end.o(.ARM.Collect$$_printf_percent$$00000017)
    __rt_lib_shutdown                        0x1b000091   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x1b000093   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_stdio_2                0x1b000093   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000003)
    __rt_lib_shutdown_fp_trap_1              0x1b000097   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_2                 0x1b000097   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000D)
    __rt_lib_shutdown_signal_1               0x1b000097   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x1b000097   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x1b000097   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_lib_shutdown_heap_1                 0x1b00009b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x1b00009b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_exit                                0x1b00009d   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x1b00009f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x1b00009f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x1b0000a3   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __aeabi_memcpy                           0x1b0000a9   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x1b0000a9   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x1b00010f   Thumb Code     0  rt_memcpy_v6.o(.text)
    strcmp                                   0x1b000139   Thumb Code   124  strcmpv7em.o(.text)
    _printf_pre_padding                      0x1b0001b5   Thumb Code    44  _printf_pad.o(.text)
    _printf_post_padding                     0x1b0001e1   Thumb Code    34  _printf_pad.o(.text)
    _printf_truncate_signed                  0x1b000203   Thumb Code    18  _printf_truncate.o(.text)
    _printf_truncate_unsigned                0x1b000215   Thumb Code    18  _printf_truncate.o(.text)
    _printf_str                              0x1b000227   Thumb Code    82  _printf_str.o(.text)
    _printf_wctomb                           0x1b000279   Thumb Code   182  _printf_wctomb.o(.text)
    _printf_longlong_dec                     0x1b000335   Thumb Code   108  _printf_longlong_dec.o(.text)
    _printf_longlong_oct                     0x1b0003b1   Thumb Code    68  _printf_oct_int_ll.o(.text)
    _printf_int_oct                          0x1b0003f5   Thumb Code    24  _printf_oct_int_ll.o(.text)
    _printf_ll_oct                           0x1b00040d   Thumb Code    12  _printf_oct_int_ll.o(.text)
    _printf_longlong_hex                     0x1b000421   Thumb Code    86  _printf_hex_int_ll_ptr.o(.text)
    _printf_int_hex                          0x1b000477   Thumb Code    28  _printf_hex_int_ll_ptr.o(.text)
    _printf_ll_hex                           0x1b000493   Thumb Code    12  _printf_hex_int_ll_ptr.o(.text)
    _printf_hex_ptr                          0x1b00049f   Thumb Code    18  _printf_hex_int_ll_ptr.o(.text)
    __aeabi_memcpy4                          0x1b0004b5   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x1b0004b5   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x1b0004b5   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x1b0004fd   Thumb Code     0  rt_memcpy_w.o(.text)
    _printf_fp_hex_real                      0x1b000519   Thumb Code   756  _printf_fp_hex.o(.text)
    _printf_cs_common                        0x1b000815   Thumb Code    20  _printf_char.o(.text)
    _printf_char                             0x1b000829   Thumb Code    16  _printf_char.o(.text)
    _printf_string                           0x1b000839   Thumb Code     8  _printf_char.o(.text)
    _initio                                  0x1b000841   Thumb Code   240  initio_locked.o(.text)
    _terminateio                             0x1b000931   Thumb Code   168  initio_locked.o(.text)
    _c16rtomb                                0x1b000a09   Thumb Code    72  _c16rtomb.o(.text)
    _wcrtomb                                 0x1b000a09   Thumb Code     0  _c16rtomb.o(.text)
    free_internal$concurrent                 0x1b000a51   Thumb Code    98  h1_free_threads.o(.text)
    free                                     0x1b000ab3   Thumb Code    20  h1_free_threads.o(.text)
    _btod_etento                             0x1b000ac9   Thumb Code   224  bigflt0.o(.text)
    __flsbuf                                 0x1b000bad   Thumb Code   482  flsbuf.o(.text)
    __flsbuf_byte                            0x1b000bad   Thumb Code     0  flsbuf.o(.text)
    __flsbuf_wide                            0x1b000bad   Thumb Code     0  flsbuf.o(.text)
    _fclose_internal                         0x1b000d8f   Thumb Code    76  fclose.o(.text)
    fclose                                   0x1b000d8f   Thumb Code     0  fclose.o(.text)
    setvbuf                                  0x1b000ddb   Thumb Code   104  setvbuf_locked.o(.text)
    __rt_SIGRTRED                            0x1b000e43   Thumb Code    14  defsig_rtred_outer.o(.text)
    _terminate_user_alloc                    0x1b000e51   Thumb Code     2  init_alloc.o(.text)
    _init_user_alloc                         0x1b000e53   Thumb Code     2  init_alloc.o(.text)
    __Heap_Full                              0x1b000e55   Thumb Code    34  init_alloc.o(.text)
    __Heap_Broken                            0x1b000e77   Thumb Code     6  init_alloc.o(.text)
    _init_alloc                              0x1b000e7d   Thumb Code    94  init_alloc.o(.text)
    _fseek                                   0x1b000edd   Thumb Code   242  fseek.o(.text)
    fseek                                    0x1b000edd   Thumb Code     0  fseek.o(.text)
    __rt_SIGRTRED_inner                      0x1b000fd5   Thumb Code    14  defsig_rtred_inner.o(.text)
    _sys_exit                                0x1b001009   Thumb Code     8  sys_exit.o(.text)
    __Heap_Initialize                        0x1b001015   Thumb Code    14  h1_init_threads.o(.text)
    _maybe_terminate_alloc                   0x1b001015   Thumb Code     0  maybetermalloc2.o(.text)
    __Heap_DescSize                          0x1b001023   Thumb Code     4  h1_init_threads.o(.text)
    __default_signal_display                 0x1b001027   Thumb Code    50  defsig_general.o(.text)
    _ttywrch                                 0x1b001059   Thumb Code    14  sys_wrch.o(.text)
    __semihosting_library_function           0x1b001067   Thumb Code     0  indicate_semi.o(.text)
    _terminate_alloc                         0x1b001067   Thumb Code    16  term_alloc.o(.text)
    __rt_SIGRTMEM_inner                      0x1b001079   Thumb Code    22  defsig_rtmem_inner.o(.text)
    GPIO_PinWrite                            0x1b0010c9   Thumb Code    62  gpio_lpc43xx.o(.text.GPIO_PinWrite)
    GetClockFreq                             0x1b001211   Thumb Code   324  system_lpc43xx.o(.text.GetClockFreq)
    ITM_SendChar                             0x1b0013d9   Thumb Code    66  retarget_io.o(.text.ITM_SendChar)
    Init_TIMER0                              0x1b00141d   Thumb Code    88  main.o(.text.Init_TIMER0)
    LED_Off                                  0x1b001475   Thumb Code    60  led_mcb4300.o(.text.LED_Off)
    OS_Tick_AcknowledgeIRQ                   0x1b0014b1   Thumb Code     8  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_GetIRQn                          0x1b0014b9   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x1b0014c1   Thumb Code    48  os_systick.o(.text.OS_Tick_Setup)
    SCU_PinConfigure                         0x1b001515   Thumb Code    78  scu_lpc43xx.o(.text.SCU_PinConfigure)
    SystemInit                               0x1b00175d   Thumb Code    84  system_lpc43xx.o(.text.SystemInit)
    Thread                                   0x1b001f61   Thumb Code    60  main.o(.text.Thread)
    _mutex_release                           0x1b001f9d   Thumb Code    28  rtx_lib.o(.text._mutex_release)
    _sys_flen                                0x1b001fb9   Thumb Code    72  retarget_io.o(.text._sys_flen)
    _sys_istty                               0x1b002001   Thumb Code    72  retarget_io.o(.text._sys_istty)
    _sys_write                               0x1b002049   Thumb Code   118  retarget_io.o(.text._sys_write)
    main                                     0x1b0020c1   Thumb Code    50  main.o(.text.main)
    osMessageQueuePut                        0x1b0020f5   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexNew                               0x1b002175   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x1b002199   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x1b0021bd   Thumb Code    46  rtx_config.o(.text.osRtxErrorNotify)
    osRtxMemoryFree                          0x1b0021eb   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryPoolFree                      0x1b00222d   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x1b002277   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x1b002359   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x1b002379   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxThreadDispatch                      0x1b002451   Thumb Code    80  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x1b0024f5   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x1b002507   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x1b002533   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x1b002547   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadRegPtr                        0x1b00256d   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x1b002581   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x1b0025b9   Thumb Code    12  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitExit                      0x1b0025c5   Thumb Code    48  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTimerThread                         0x1b0025f5   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x1b002685   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x1b002691   Thumb Code    32  rtx_thread.o(.text.osThreadNew)
    _btod_ediv                               0x1b002a19   Thumb Code    42  btod.o(CL$$btod_ediv)
    _btod_emul                               0x1b002a43   Thumb Code    42  btod.o(CL$$btod_emul)
    Long Thumb to Thumb Veneer to _printf_charcount 0x1b002a6d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_fp_hex 0x1b002a77   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_int_dec 0x1b002a81   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_wchar 0x1b002a8b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_wstring 0x1b002a95   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _ll_udiv10 0x1b002a9f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_int_common 0x1b002aa9   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_fp_infnan 0x1b002ab3   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __aeabi_memclr4 0x1b002abd   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _mutex_initialize 0x1b002ac7   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to freopen    0x1b002ad1   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _mutex_acquire 0x1b002adb   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _mutex_free 0x1b002ae5   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __rt_ctype_table 0x1b002aef   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __rt_heap_descriptor 0x1b002af9   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _deferredlazyseek 0x1b002b03   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _seterr    0x1b002b0d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to malloc     0x1b002b17   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _writebuf  0x1b002b21   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _fflush    0x1b002b2b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _sys_close 0x1b002b35   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __sig_exit 0x1b002b3f   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __Heap_ProvideMemory 0x1b002b49   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __rt_SIGRTMEM 0x1b002b53   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _ftell_internal 0x1b002b5d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __Heap_Finalize 0x1b002b67   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to SystemCoreClockUpdate 0x1b002b7b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __aeabi_uldivmod 0x1b002b85   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to LED_Initialize 0x1b002b99   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osThreadYield 0x1b002ba3   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to printf     0x1b002bad   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osDelay    0x1b002bb7   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to LED_On     0x1b002bc1   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osKernelInitialize 0x1b002bdf   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to Init_Thread 0x1b002be9   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osKernelStart 0x1b002bf3   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxMemoryPoolAlloc 0x1b002bfd   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxPostProcess 0x1b002c07   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadReadyPut 0x1b002c39   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osMessageQueueGet 0x1b002c4d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxKernelErrorNotify 0x1b002c57   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to osRtxThreadWaitEnter 0x1b002c6b   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to OS_Tick_Enable 0x1b002c75   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __btod_div_common 0x1b002c93   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _e2e       0x1b002c9d   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to __btod_mult_common 0x1b002ca7   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    Long Thumb to Thumb Veneer to _printf_fp_dec_real 0x1b002cb1   Thumb Code    10  anon$$obj.o(Veneer$$Code)
    __ARM_fpclassify                         0x1b002cbb   Thumb Code    48  fpclassify.o(i.__ARM_fpclassify)
    _fputc$unlocked                          0x1b002ceb   Thumb Code    28  fputc.o(i.fputc)
    _get_lc_numeric                          0x1b002d09   Thumb Code    44  lc_numeric_c.o(locale$$code)
    $Super$$_fp_init                         0x1b002d35   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x1b002d4d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x1b002d4d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    _printf_fp_dec                           0x1b002d4f   Thumb Code     4  printf1.o(x$fpl$printf1)
    __I$use$fp                               0x1b002d52   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxConfig                              0x1b002d7c   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x1b002dec   Data          56  rtx_lib.o(.rodata)
    __stdin_name                             0x1b002e74   Data           7  retarget_io.o(.rodata.__stdin_name)
    __ctype                                  0x1b002f0d   Data           0  lc_ctype_c.o(locale$$data)
    __aeabi_stdin                            0x20000000   Data           4  stdio_streams.o(.data)
    __aeabi_stdout                           0x20000004   Data           4  stdio_streams.o(.data)
    _stream_list_lock                        0x20000008   Data           4  streamlock.o(.data)
    SystemCoreClock                          0x2000000c   Data           4  system_lpc43xx.o(.data.SystemCoreClock)
    __stdin                                  0x20000010   Data          84  stdio_streams.o(.bss)
    __stderr                                 0x20000064   Data          84  stdio_streams.o(.bss)
    .bss.os.msgqueue.cb$$Base                0x200082ec   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20008320   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x20008320   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x200083a8   Number         0  rtx_lib.o(.bss.os.thread.cb)
    tid_Thread                               0x200087a8   Data           4  main.o(.bss.tid_Thread)



==============================================================================

Memory Map of the image

  Image Entry point : 0x1a000301

  Load Region LR_IROM1 (Base: 0x1a000000, Size: 0x00003150, Max: 0x00080000, ABSOLUTE)

    Execution Region RW_IRAM1 (Exec base: 0x10000000, Load base: 0x1a003098, Size: 0x000007b0, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000000   0x1a003098   0x00000004   Data   RW          811    .data               c_w.l(stdio_streams.o)
    0x10000004   0x1a00309c   0x000000a4   Data   RW          270    .data.os            RTX_CM4F.lib(rtx_kernel.o)
    0x100000a8        -       0x00000054   Zero   RW          807    .bss                c_w.l(stdio_streams.o)
    0x100000fc        -       0x00000060   Zero   RW         1072    .bss                c_w.l(libspace.o)
    0x1000015c        -       0x00000050   Zero   RW           90    .bss.os.msgqueue.mem  rtx_lib.o
    0x100001ac        -       0x00000001   Zero   RW           91    .bss.os_kernel_is_active.os_kernel_active  rtx_lib.o
    0x100001ad   0x1a003140   0x00000003   PAD
    0x100001b0        -       0x00000200   Zero   RW          171    HEAP                startup_lpc43xx.o
    0x100003b0        -       0x00000400   Zero   RW          170    STACK               startup_lpc43xx.o


    Execution Region ER_IROM1 (Exec base: 0x1a000000, Load base: 0x1a000000, Size: 0x00003094, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1a000000   0x1a000000   0x00000300   Data   RO          172    RESET               startup_lpc43xx.o
    0x1a000300   0x1a000300   0x00000008   Code   RO          708  * !!!main             c_w.l(__main.o)
    0x1a000308   0x1a000308   0x0000005c   Code   RO         1227    !!!scatter          c_w.l(__scatter.o)
    0x1a000364   0x1a000364   0x0000001a   Code   RO         1231    !!handler_copy      c_w.l(__scatter_copy.o)
    0x1a00037e   0x1a00037e   0x00000002   PAD
    0x1a000380   0x1a000380   0x00000002   Code   RO         1228    !!handler_null      c_w.l(__scatter.o)
    0x1a000382   0x1a000382   0x00000002   PAD
    0x1a000384   0x1a000384   0x0000001c   Code   RO         1233    !!handler_zi        c_w.l(__scatter_zi.o)
    0x1a0003a0   0x1a0003a0   0x00000002   Code   RO         1000    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x1a0003a2   0x1a0003a2   0x00000004   Code   RO         1001    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x1a0003a6   0x1a0003a6   0x00000000   Code   RO         1004    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x1a0003a6   0x1a0003a6   0x00000000   Code   RO         1006    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x1a0003a6   0x1a0003a6   0x00000008   Code   RO         1007    .ARM.Collect$$libinit$$00000007  c_w.l(libinit2.o)
    0x1a0003ae   0x1a0003ae   0x00000000   Code   RO         1009    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x1a0003ae   0x1a0003ae   0x00000000   Code   RO         1011    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x1a0003ae   0x1a0003ae   0x00000000   Code   RO         1013    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x1a0003ae   0x1a0003ae   0x00000006   Code   RO         1014    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x1a0003b4   0x1a0003b4   0x00000000   Code   RO         1016    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x1a0003b4   0x1a0003b4   0x0000000c   Code   RO         1017    .ARM.Collect$$libinit$$00000014  c_w.l(libinit2.o)
    0x1a0003c0   0x1a0003c0   0x00000000   Code   RO         1018    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x1a0003c0   0x1a0003c0   0x00000000   Code   RO         1020    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x1a0003c0   0x1a0003c0   0x0000000a   Code   RO         1021    .ARM.Collect$$libinit$$00000018  c_w.l(libinit2.o)
    0x1a0003ca   0x1a0003ca   0x00000000   Code   RO         1022    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x1a0003ca   0x1a0003ca   0x00000000   Code   RO         1024    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x1a0003ca   0x1a0003ca   0x00000000   Code   RO         1026    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x1a0003ca   0x1a0003ca   0x00000000   Code   RO         1028    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x1a0003ca   0x1a0003ca   0x00000000   Code   RO         1030    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x1a0003ca   0x1a0003ca   0x00000000   Code   RO         1032    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x1a0003ca   0x1a0003ca   0x00000000   Code   RO         1034    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x1a0003ca   0x1a0003ca   0x00000004   Code   RO         1035    .ARM.Collect$$libinit$$00000026  c_w.l(libinit2.o)
    0x1a0003ce   0x1a0003ce   0x00000000   Code   RO         1036    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x1a0003ce   0x1a0003ce   0x00000000   Code   RO         1040    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x1a0003ce   0x1a0003ce   0x00000000   Code   RO         1042    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x1a0003ce   0x1a0003ce   0x00000000   Code   RO         1044    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x1a0003ce   0x1a0003ce   0x00000000   Code   RO         1046    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x1a0003ce   0x1a0003ce   0x00000002   Code   RO         1047    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x1a0003d0   0x1a0003d0   0x00000000   Code   RO          712    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x1a0003d0   0x1a0003d0   0x00000000   Code   RO          823    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x1a0003d0   0x1a0003d0   0x00000006   Code   RO          835    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x1a0003d6   0x1a0003d6   0x00000008   Code   RO          824    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x1a0003de   0x1a0003de   0x00000004   Code   RO          826    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x1a0003e2   0x1a0003e2   0x00000000   Code   RO          828    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x1a0003e2   0x1a0003e2   0x00000008   Code   RO          829    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x1a0003ea   0x1a0003ea   0x00000002   PAD
    0x1a0003ec   0x1a0003ec   0x00000040   Code   RO          173    .text               startup_lpc43xx.o
    0x1a00042c   0x1a00042c   0x000000c8   Code   RO          516    .text               RTX_CM4F.lib(irq_armv7m.o)
    0x1a0004f4   0x1a0004f4   0x000000f0   Code   RO          694    .text               c_w.l(lludivv7m.o)
    0x1a0005e4   0x1a0005e4   0x00000018   Code   RO          696    .text               c_w.l(printf.o)
    0x1a0005fc   0x1a0005fc   0x00000044   Code   RO          700    .text               c_w.l(rt_memclr.o)
    0x1a000640   0x1a000640   0x0000004e   Code   RO          702    .text               c_w.l(rt_memclr_w.o)
    0x1a00068e   0x1a00068e   0x00000006   Code   RO          706    .text               c_w.l(heapauxi.o)
    0x1a000694   0x1a000694   0x00000078   Code   RO          725    .text               c_w.l(_printf_dec.o)
    0x1a00070c   0x1a00070c   0x00000028   Code   RO          727    .text               c_w.l(_printf_charcount.o)
    0x1a000734   0x1a000734   0x00000188   Code   RO          780    .text               c_w.l(__printf_flags_ss_wp.o)
    0x1a0008bc   0x1a0008bc   0x0000008a   Code   RO          839    .text               c_w.l(lludiv10.o)
    0x1a000946   0x1a000946   0x000000b2   Code   RO          841    .text               c_w.l(_printf_intcommon.o)
    0x1a0009f8   0x1a0009f8   0x0000041c   Code   RO          843    .text               c_w.l(_printf_fp_dec.o)
    0x1a000e14   0x1a000e14   0x00000030   Code   RO          850    .text               c_w.l(_printf_char_common.o)
    0x1a000e44   0x1a000e44   0x0000002c   Code   RO          854    .text               c_w.l(_printf_wchar.o)
    0x1a000e70   0x1a000e70   0x0000004a   Code   RO          873    .text               c_w.l(sys_stackheap_outer.o)
    0x1a000eba   0x1a000eba   0x00000002   PAD
    0x1a000ebc   0x1a000ebc   0x00000010   Code   RO          875    .text               c_w.l(rt_ctype_table.o)
    0x1a000ecc   0x1a000ecc   0x0000000a   Code   RO          882    .text               c_w.l(rt_locale_twolibspace.o)
    0x1a000ed6   0x1a000ed6   0x00000002   PAD
    0x1a000ed8   0x1a000ed8   0x00000080   Code   RO          940    .text               c_w.l(_printf_fp_infnan.o)
    0x1a000f58   0x1a000f58   0x0000014c   Code   RO          982    .text               c_w.l(fopen_locked.o)
    0x1a0010a4   0x1a0010a4   0x00000012   Code   RO          987    .text               c_w.l(exit.o)
    0x1a0010b6   0x1a0010b6   0x00000002   PAD
    0x1a0010b8   0x1a0010b8   0x00000008   Code   RO         1071    .text               c_w.l(libspace.o)
    0x1a0010c0   0x1a0010c0   0x0000000a   Code   RO         1083    .text               c_w.l(rt_heap_descriptor_twolibspace.o)
    0x1a0010ca   0x1a0010ca   0x00000004   Code   RO         1085    .text               c_w.l(hguard.o)
    0x1a0010ce   0x1a0010ce   0x000000a6   Code   RO         1095    .text               c_w.l(h1_alloc_threads.o)
    0x1a001174   0x1a001174   0x00000040   Code   RO         1105    .text               c_w.l(_printf_char_file_locked.o)
    0x1a0011b4   0x1a0011b4   0x00000108   Code   RO         1111    .text               c_w.l(stdio.o)
    0x1a0012bc   0x1a0012bc   0x0000000a   Code   RO         1120    .text               c_w.l(defsig_exit.o)
    0x1a0012c6   0x1a0012c6   0x00000052   Code   RO         1149    .text               c_w.l(h1_extend_threads.o)
    0x1a001318   0x1a001318   0x00000042   Code   RO         1157    .text               c_w.l(ftell.o)
    0x1a00135a   0x1a00135a   0x0000000e   Code   RO         1167    .text               c_w.l(defsig_rtmem_outer.o)
    0x1a001368   0x1a001368   0x00000002   Code   RO         1188    .text               c_w.l(use_no_semi.o)
    0x1a00136a   0x1a00136a   0x00000004   Code   RO         1196    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x1a00136e   0x1a00136e   0x0000000a   Code   RO         1211    .text               c_w.l(h1_final_threads.o)
    0x1a001378   0x1a001378   0x00000016   Code   RO           63    .text.$Sub$$_fp_init  rtx_lib.o
    0x1a00138e   0x1a00138e   0x00000002   PAD
    0x1a001390   0x1a001390   0x00000084   Code   RO          131    .text.GPIO_PortClock  gpio_lpc43xx.o
    0x1a001414   0x1a001414   0x0000004e   Code   RO          133    .text.GPIO_SetDir   gpio_lpc43xx.o
    0x1a001462   0x1a001462   0x00000002   PAD
    0x1a001464   0x1a001464   0x0000003a   Code   RO            2    .text.Init_Thread   main.o
    0x1a00149e   0x1a00149e   0x00000002   PAD
    0x1a0014a0   0x1a0014a0   0x00000072   Code   RO           29    .text.LED_Initialize  led_mcb4300.o
    0x1a001512   0x1a001512   0x00000002   PAD
    0x1a001514   0x1a001514   0x0000003c   Code   RO           33    .text.LED_On        led_mcb4300.o
    0x1a001550   0x1a001550   0x00000040   Code   RO          632    .text.MessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1a001590   0x1a001590   0x00000058   Code   RO          626    .text.MessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1a0015e8   0x1a0015e8   0x0000001c   Code   RO          624    .text.MessageQueueRemove  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1a001604   0x1a001604   0x0000002c   Code   RO          668    .text.OS_Tick_Enable  RTX_CM4F.lib(os_systick.o)
    0x1a001630   0x1a001630   0x0000000c   Code   RO          640    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1a00163c   0x1a00163c   0x00000006   Code   RO          267    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_kernel.o)
    0x1a001642   0x1a001642   0x00000006   Code   RO          642    .text.OUTLINED_FUNCTION_1  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1a001648   0x1a001648   0x00000026   Code   RO          188    .text.SystemCoreClockUpdate  system_lpc43xx.o
    0x1a00166e   0x1a00166e   0x00000002   PAD
    0x1a001670   0x1a001670   0x00000014   Code   RO           12    .text.TIMER0_IRQHandler  main.o
    0x1a001684   0x1a001684   0x00000064   Code   RO          357    .text.ThreadFlagsCheck  RTX_CM4F.lib(rtx_thread.o)
    0x1a0016e8   0x1a0016e8   0x00000044   Code   RO          457    .text.TimerInsert   RTX_CM4F.lib(rtx_timer.o)
    0x1a00172c   0x1a00172c   0x0000004c   Code   RO          196    .text.WaitUs        system_lpc43xx.o
    0x1a001778   0x1a001778   0x00000030   Code   RO            8    .text.__NVIC_EnableIRQ  main.o
    0x1a0017a8   0x1a0017a8   0x00000096   Code   RO           65    .text.__user_perthread_libspace  rtx_lib.o
    0x1a00183e   0x1a00183e   0x00000002   PAD
    0x1a001840   0x1a001840   0x00000020   Code   RO           71    .text._mutex_acquire  rtx_lib.o
    0x1a001860   0x1a001860   0x00000012   Code   RO           75    .text._mutex_free   rtx_lib.o
    0x1a001872   0x1a001872   0x00000002   PAD
    0x1a001874   0x1a001874   0x00000032   Code   RO           69    .text._mutex_initialize  rtx_lib.o
    0x1a0018a6   0x1a0018a6   0x00000002   PAD
    0x1a0018a8   0x1a0018a8   0x00000008   Code   RO           61    .text._platform_post_stackheap_init  rtx_lib.o
    0x1a0018b0   0x1a0018b0   0x0000004a   Code   RO          105    .text._sys_close    retarget_io.o
    0x1a0018fa   0x1a0018fa   0x00000002   PAD
    0x1a0018fc   0x1a0018fc   0x00000084   Code   RO          103    .text._sys_open     retarget_io.o
    0x1a001980   0x1a001980   0x00000052   Code   RO          115    .text._sys_seek     retarget_io.o
    0x1a0019d2   0x1a0019d2   0x00000002   PAD
    0x1a0019d4   0x1a0019d4   0x00000008   Code   RO           16    .text.app_main      main.o
    0x1a0019dc   0x1a0019dc   0x0000002e   Code   RO           10    .text.increment     main.o
    0x1a001a0a   0x1a001a0a   0x00000002   PAD
    0x1a001a0c   0x1a001a0c   0x00000024   Code   RO          423    .text.osDelay       RTX_CM4F.lib(rtx_delay.o)
    0x1a001a30   0x1a001a30   0x00000030   Code   RO          217    .text.osKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x1a001a60   0x1a001a60   0x0000002c   Code   RO          211    .text.osKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x1a001a8c   0x1a001a8c   0x00000024   Code   RO          221    .text.osKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x1a001ab0   0x1a001ab0   0x00000070   Code   RO          600    .text.osMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1a001b20   0x1a001b20   0x00000024   Code   RO          489    .text.osMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x1a001b44   0x1a001b44   0x00000024   Code   RO          495    .text.osMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x1a001b68   0x1a001b68   0x00000008   Code   RO           50    .text.osRtxIdleThread  rtx_config.o
    0x1a001b70   0x1a001b70   0x00000004   Code   RO          209    .text.osRtxKernelErrorNotify  RTX_CM4F.lib(rtx_kernel.o)
    0x1a001b74   0x1a001b74   0x00000002   Code   RO          207    .text.osRtxKernelPreInit  RTX_CM4F.lib(rtx_kernel.o)
    0x1a001b76   0x1a001b76   0x0000006c   Code   RO          526    .text.osRtxMemoryAlloc  RTX_CM4F.lib(rtx_memory.o)
    0x1a001be2   0x1a001be2   0x00000036   Code   RO          524    .text.osRtxMemoryInit  RTX_CM4F.lib(rtx_memory.o)
    0x1a001c18   0x1a001c18   0x0000003a   Code   RO          540    .text.osRtxMemoryPoolAlloc  RTX_CM4F.lib(rtx_mempool.o)
    0x1a001c52   0x1a001c52   0x00000048   Code   RO          483    .text.osRtxMutexOwnerRestore  RTX_CM4F.lib(rtx_mutex.o)
    0x1a001c9a   0x1a001c9a   0x00000002   PAD
    0x1a001c9c   0x1a001c9c   0x00000088   Code   RO          654    .text.osRtxPendSV_Handler  RTX_CM4F.lib(rtx_system.o)
    0x1a001d24   0x1a001d24   0x00000070   Code   RO          656    .text.osRtxPostProcess  RTX_CM4F.lib(rtx_system.o)
    0x1a001d94   0x1a001d94   0x00000080   Code   RO          305    .text.osRtxThreadDelayInsert  RTX_CM4F.lib(rtx_thread.o)
    0x1a001e14   0x1a001e14   0x00000050   Code   RO          289    .text.osRtxThreadDelayTick  RTX_CM4F.lib(rtx_thread.o)
    0x1a001e64   0x1a001e64   0x0000001e   Code   RO          387    .text.osRtxThreadJoinWakeup  RTX_CM4F.lib(rtx_thread.o)
    0x1a001e82   0x1a001e82   0x00000028   Code   RO          355    .text.osRtxThreadPostProcess  RTX_CM4F.lib(rtx_thread.o)
    0x1a001eaa   0x1a001eaa   0x00000002   PAD
    0x1a001eac   0x1a001eac   0x00000010   Code   RO          287    .text.osRtxThreadReadyPut  RTX_CM4F.lib(rtx_thread.o)
    0x1a001ebc   0x1a001ebc   0x00000038   Code   RO          303    .text.osRtxThreadWaitEnter  RTX_CM4F.lib(rtx_thread.o)
    0x1a001ef4   0x1a001ef4   0x00000074   Code   RO          652    .text.osRtxTick_Handler  RTX_CM4F.lib(rtx_system.o)
    0x1a001f68   0x1a001f68   0x0000001c   Code   RO          439    .text.osRtxTimerSetup  RTX_CM4F.lib(rtx_timer.o)
    0x1a001f84   0x1a001f84   0x00000024   Code   RO          315    .text.osThreadGetId  RTX_CM4F.lib(rtx_thread.o)
    0x1a001fa8   0x1a001fa8   0x00000024   Code   RO          329    .text.osThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x1a001fcc   0x1a001fcc   0x00000036   Code   RO           67    .text.os_kernel_is_active  rtx_lib.o
    0x1a002002   0x1a002002   0x00000002   PAD
    0x1a002004   0x1a002004   0x00000010   Code   RO          109    .text.stdout_putchar  retarget_io.o
    0x1a002014   0x1a002014   0x0000000c   Code   RO          219    .text.svcRtxKernelGetState  RTX_CM4F.lib(rtx_kernel.o)
    0x1a002020   0x1a002020   0x00000100   Code   RO          249    .text.svcRtxKernelInitialize  RTX_CM4F.lib(rtx_kernel.o)
    0x1a002120   0x1a002120   0x00000118   Code   RO          592    .text.svcRtxMessageQueueNew  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1a002238   0x1a002238   0x000000ac   Code   RO          630    .text.svcRtxMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1a0022e4   0x1a0022e4   0x00000068   Code   RO          497    .text.svcRtxMutexNew  RTX_CM4F.lib(rtx_mutex.o)
    0x1a00234c   0x1a00234c   0x00000048   Code   RO          385    .text.svcRtxThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x1a002394   0x1a002394   0x0000000c   Code   RO          317    .text.svcRtxThreadGetId  RTX_CM4F.lib(rtx_thread.o)
    0x1a0023a0   0x1a0023a0   0x000001e8   Code   RO          309    .text.svcRtxThreadNew  RTX_CM4F.lib(rtx_thread.o)
    0x1a002588   0x1a002588   0x00000038   Code   RO          371    .text.svcRtxThreadYield  RTX_CM4F.lib(rtx_thread.o)
    0x1a0025c0   0x1a0025c0   0x0000003e   Code   RO          947    CL$$btod_d2e        c_w.l(btod.o)
    0x1a0025fe   0x1a0025fe   0x00000046   Code   RO          949    CL$$btod_d2e_denorm_low  c_w.l(btod.o)
    0x1a002644   0x1a002644   0x00000060   Code   RO          948    CL$$btod_d2e_norm_op1  c_w.l(btod.o)
    0x1a0026a4   0x1a0026a4   0x00000338   Code   RO          957    CL$$btod_div_common  c_w.l(btod.o)
    0x1a0029dc   0x1a0029dc   0x000000dc   Code   RO          954    CL$$btod_e2e        c_w.l(btod.o)
    0x1a002ab8   0x1a002ab8   0x00000244   Code   RO          956    CL$$btod_mult_common  c_w.l(btod.o)
    0x1a002cfc   0x1a002cfc   0x0000000a   Ven    RO         1235    Veneer$$Code        anon$$obj.o
    0x1a002d06   0x1a002d06   0x0000000a   Ven    RO         1236    Veneer$$Code        anon$$obj.o
    0x1a002d10   0x1a002d10   0x0000000a   Ven    RO         1237    Veneer$$Code        anon$$obj.o
    0x1a002d1a   0x1a002d1a   0x0000000a   Ven    RO         1238    Veneer$$Code        anon$$obj.o
    0x1a002d24   0x1a002d24   0x0000000a   Ven    RO         1239    Veneer$$Code        anon$$obj.o
    0x1a002d2e   0x1a002d2e   0x0000000a   Ven    RO         1240    Veneer$$Code        anon$$obj.o
    0x1a002d38   0x1a002d38   0x0000000a   Ven    RO         1241    Veneer$$Code        anon$$obj.o
    0x1a002d42   0x1a002d42   0x0000000a   Ven    RO         1242    Veneer$$Code        anon$$obj.o
    0x1a002d4c   0x1a002d4c   0x0000000a   Ven    RO         1243    Veneer$$Code        anon$$obj.o
    0x1a002d56   0x1a002d56   0x0000000a   Ven    RO         1244    Veneer$$Code        anon$$obj.o
    0x1a002d60   0x1a002d60   0x0000000a   Ven    RO         1245    Veneer$$Code        anon$$obj.o
    0x1a002d6a   0x1a002d6a   0x0000000a   Ven    RO         1246    Veneer$$Code        anon$$obj.o
    0x1a002d74   0x1a002d74   0x0000000a   Ven    RO         1247    Veneer$$Code        anon$$obj.o
    0x1a002d7e   0x1a002d7e   0x0000000a   Ven    RO         1248    Veneer$$Code        anon$$obj.o
    0x1a002d88   0x1a002d88   0x0000000a   Ven    RO         1249    Veneer$$Code        anon$$obj.o
    0x1a002d92   0x1a002d92   0x0000000a   Ven    RO         1250    Veneer$$Code        anon$$obj.o
    0x1a002d9c   0x1a002d9c   0x0000000a   Ven    RO         1251    Veneer$$Code        anon$$obj.o
    0x1a002da6   0x1a002da6   0x0000000a   Ven    RO         1252    Veneer$$Code        anon$$obj.o
    0x1a002db0   0x1a002db0   0x0000000a   Ven    RO         1253    Veneer$$Code        anon$$obj.o
    0x1a002dba   0x1a002dba   0x0000000a   Ven    RO         1254    Veneer$$Code        anon$$obj.o
    0x1a002dc4   0x1a002dc4   0x0000000a   Ven    RO         1255    Veneer$$Code        anon$$obj.o
    0x1a002dce   0x1a002dce   0x0000000a   Ven    RO         1256    Veneer$$Code        anon$$obj.o
    0x1a002dd8   0x1a002dd8   0x0000000a   Ven    RO         1257    Veneer$$Code        anon$$obj.o
    0x1a002de2   0x1a002de2   0x0000000a   Ven    RO         1258    Veneer$$Code        anon$$obj.o
    0x1a002dec   0x1a002dec   0x0000000a   Ven    RO         1259    Veneer$$Code        anon$$obj.o
    0x1a002df6   0x1a002df6   0x0000000a   Ven    RO         1260    Veneer$$Code        anon$$obj.o
    0x1a002e00   0x1a002e00   0x0000000a   Ven    RO         1261    Veneer$$Code        anon$$obj.o
    0x1a002e0a   0x1a002e0a   0x0000000a   Ven    RO         1262    Veneer$$Code        anon$$obj.o
    0x1a002e14   0x1a002e14   0x0000000a   Ven    RO         1263    Veneer$$Code        anon$$obj.o
    0x1a002e1e   0x1a002e1e   0x0000000a   Ven    RO         1264    Veneer$$Code        anon$$obj.o
    0x1a002e28   0x1a002e28   0x0000000a   Ven    RO         1265    Veneer$$Code        anon$$obj.o
    0x1a002e32   0x1a002e32   0x0000000a   Ven    RO         1266    Veneer$$Code        anon$$obj.o
    0x1a002e3c   0x1a002e3c   0x0000000a   Ven    RO         1267    Veneer$$Code        anon$$obj.o
    0x1a002e46   0x1a002e46   0x0000000a   Ven    RO         1268    Veneer$$Code        anon$$obj.o
    0x1a002e50   0x1a002e50   0x0000000a   Ven    RO         1269    Veneer$$Code        anon$$obj.o
    0x1a002e5a   0x1a002e5a   0x0000000a   Ven    RO         1270    Veneer$$Code        anon$$obj.o
    0x1a002e64   0x1a002e64   0x0000000a   Ven    RO         1271    Veneer$$Code        anon$$obj.o
    0x1a002e6e   0x1a002e6e   0x0000000a   Ven    RO         1272    Veneer$$Code        anon$$obj.o
    0x1a002e78   0x1a002e78   0x0000000a   Ven    RO         1273    Veneer$$Code        anon$$obj.o
    0x1a002e82   0x1a002e82   0x0000000a   Ven    RO         1274    Veneer$$Code        anon$$obj.o
    0x1a002e8c   0x1a002e8c   0x0000000a   Ven    RO         1275    Veneer$$Code        anon$$obj.o
    0x1a002e96   0x1a002e96   0x0000000a   Ven    RO         1276    Veneer$$Code        anon$$obj.o
    0x1a002ea0   0x1a002ea0   0x0000000a   Ven    RO         1277    Veneer$$Code        anon$$obj.o
    0x1a002eaa   0x1a002eaa   0x0000000a   Ven    RO         1278    Veneer$$Code        anon$$obj.o
    0x1a002eb4   0x1a002eb4   0x0000000a   Ven    RO         1279    Veneer$$Code        anon$$obj.o
    0x1a002ebe   0x1a002ebe   0x0000000a   Ven    RO         1280    Veneer$$Code        anon$$obj.o
    0x1a002ec8   0x1a002ec8   0x0000000a   Ven    RO         1281    Veneer$$Code        anon$$obj.o
    0x1a002ed2   0x1a002ed2   0x0000000a   Ven    RO         1282    Veneer$$Code        anon$$obj.o
    0x1a002edc   0x1a002edc   0x0000000a   Ven    RO         1283    Veneer$$Code        anon$$obj.o
    0x1a002ee6   0x1a002ee6   0x0000000a   Ven    RO         1284    Veneer$$Code        anon$$obj.o
    0x1a002ef0   0x1a002ef0   0x0000000a   Ven    RO         1285    Veneer$$Code        anon$$obj.o
    0x1a002efa   0x1a002efa   0x0000000e   Code   RO          773    i._is_digit         c_w.l(__printf_wp.o)
    0x1a002f08   0x1a002f08   0x0000002c   Code   RO         1118    locale$$code        c_w.l(lc_ctype_c.o)
    0x1a002f34   0x1a002f34   0x00000004   Code   RO          816    x$fpl$printf2       fz_wm.l(printf2.o)
    0x1a002f38   0x1a002f38   0x00000008   Data   RO          732    .constdata          c_w.l(_printf_wctomb.o)
    0x1a002f40   0x1a002f40   0x00000011   Data   RO          781    .constdata          c_w.l(__printf_flags_ss_wp.o)
    0x1a002f51   0x1a002f51   0x00000026   Data   RO          848    .constdata          c_w.l(_printf_fp_hex.o)
    0x1a002f77   0x1a002f77   0x00000001   PAD
    0x1a002f78   0x1a002f78   0x00000094   Data   RO          945    .constdata          c_w.l(bigflt0.o)
    0x1a00300c   0x1a00300c   0x00000008   Data   RO          122    .rodata.__stderr_name  retarget_io.o
    0x1a003014   0x1a003014   0x00000008   Data   RO          121    .rodata.__stdout_name  retarget_io.o
    0x1a00301c   0x1a00301c   0x00000014   Data   RO          199    .rodata.emcdivby2_opc  system_lpc43xx.o
    0x1a003030   0x1a003030   0x00000004   Data   RO           83    .rodata.osRtxUserSVC  rtx_lib.o
    0x1a003034   0x1a003034   0x00000004   Data   RO           19    .rodata.str1.1      main.o
    0x1a003038   0x1a003038   0x00000040   Data   RO         1226    Region$$Table       anon$$obj.o
    0x1a003078   0x1a003078   0x0000001c   Data   RO          984    locale$$data        c_w.l(lc_numeric_c.o)


    Execution Region RW_IRAM2 (Exec base: 0x20000000, Load base: 0x1a003140, Size: 0x000087b0, Max: 0x00010000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x1a003140   0x00000004   Data   RW          809    .data               c_w.l(stdio_streams.o)
    0x20000004   0x1a003144   0x00000004   Data   RW          810    .data               c_w.l(stdio_streams.o)
    0x20000008   0x1a003148   0x00000004   Data   RW          975    .data               c_w.l(streamlock.o)
    0x2000000c   0x1a00314c   0x00000004   Data   RW          198    .data.SystemCoreClock  system_lpc43xx.o
    0x20000010        -       0x00000054   Zero   RW          806    .bss                c_w.l(stdio_streams.o)
    0x20000064        -       0x00000054   Zero   RW          808    .bss                c_w.l(stdio_streams.o)
    0x200000b8        -       0x00008040   Zero   RW           77    .bss.os             rtx_lib.o
    0x200080f8        -       0x00000001   Zero   RW          684    .bss.os             RTX_CM4F.lib(os_systick.o)
    0x200080f9   0x1a003150   0x00000003   PAD
    0x200080fc        -       0x000001f0   Zero   RW           85    .bss.os.libspace    rtx_lib.o
    0x200082ec        -       0x00000034   Zero   RW           89    .bss.os.msgqueue.cb  rtx_lib.o
    0x20008320        -       0x00000088   Zero   RW           86    .bss.os.thread.cb   rtx_lib.o
    0x200083a8        -       0x00000200   Zero   RW           87    .bss.os.thread.idle.stack  rtx_lib.o
    0x200085a8        -       0x00000200   Zero   RW           88    .bss.os.thread.timer.stack  rtx_lib.o
    0x200087a8        -       0x00000004   Zero   RW           18    .bss.tid_Thread     main.o
    0x200087ac        -       0x00000004   Zero   RW           20    .bss.x              main.o



  Load Region LR_IROM2 (Base: 0x1b000000, Size: 0x00003010, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM2 (Exec base: 0x1b000000, Load base: 0x1b000000, Size: 0x00003010, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1b000000   0x1b000000   0x00000000   Code   RO          796    .ARM.Collect$$_printf_percent$$00000000  c_w.l(_printf_percent.o)
    0x1b000000   0x1b000000   0x00000006   Code   RO          785    .ARM.Collect$$_printf_percent$$00000001  c_w.l(_printf_n.o)
    0x1b000006   0x1b000006   0x00000006   Code   RO          787    .ARM.Collect$$_printf_percent$$00000002  c_w.l(_printf_p.o)
    0x1b00000c   0x1b00000c   0x00000006   Code   RO          792    .ARM.Collect$$_printf_percent$$00000003  c_w.l(_printf_f.o)
    0x1b000012   0x1b000012   0x00000006   Code   RO          793    .ARM.Collect$$_printf_percent$$00000004  c_w.l(_printf_e.o)
    0x1b000018   0x1b000018   0x00000006   Code   RO          794    .ARM.Collect$$_printf_percent$$00000005  c_w.l(_printf_g.o)
    0x1b00001e   0x1b00001e   0x00000006   Code   RO          795    .ARM.Collect$$_printf_percent$$00000006  c_w.l(_printf_a.o)
    0x1b000024   0x1b000024   0x0000000a   Code   RO          800    .ARM.Collect$$_printf_percent$$00000007  c_w.l(_printf_ll.o)
    0x1b00002e   0x1b00002e   0x00000006   Code   RO          789    .ARM.Collect$$_printf_percent$$00000008  c_w.l(_printf_i.o)
    0x1b000034   0x1b000034   0x00000006   Code   RO          790    .ARM.Collect$$_printf_percent$$00000009  c_w.l(_printf_d.o)
    0x1b00003a   0x1b00003a   0x00000006   Code   RO          791    .ARM.Collect$$_printf_percent$$0000000A  c_w.l(_printf_u.o)
    0x1b000040   0x1b000040   0x00000006   Code   RO          788    .ARM.Collect$$_printf_percent$$0000000B  c_w.l(_printf_o.o)
    0x1b000046   0x1b000046   0x00000006   Code   RO          786    .ARM.Collect$$_printf_percent$$0000000C  c_w.l(_printf_x.o)
    0x1b00004c   0x1b00004c   0x00000006   Code   RO          797    .ARM.Collect$$_printf_percent$$0000000D  c_w.l(_printf_lli.o)
    0x1b000052   0x1b000052   0x00000006   Code   RO          798    .ARM.Collect$$_printf_percent$$0000000E  c_w.l(_printf_lld.o)
    0x1b000058   0x1b000058   0x00000006   Code   RO          799    .ARM.Collect$$_printf_percent$$0000000F  c_w.l(_printf_llu.o)
    0x1b00005e   0x1b00005e   0x00000006   Code   RO          804    .ARM.Collect$$_printf_percent$$00000010  c_w.l(_printf_llo.o)
    0x1b000064   0x1b000064   0x00000006   Code   RO          805    .ARM.Collect$$_printf_percent$$00000011  c_w.l(_printf_llx.o)
    0x1b00006a   0x1b00006a   0x0000000a   Code   RO          801    .ARM.Collect$$_printf_percent$$00000012  c_w.l(_printf_l.o)
    0x1b000074   0x1b000074   0x00000006   Code   RO          783    .ARM.Collect$$_printf_percent$$00000013  c_w.l(_printf_c.o)
    0x1b00007a   0x1b00007a   0x00000006   Code   RO          784    .ARM.Collect$$_printf_percent$$00000014  c_w.l(_printf_s.o)
    0x1b000080   0x1b000080   0x00000006   Code   RO          802    .ARM.Collect$$_printf_percent$$00000015  c_w.l(_printf_lc.o)
    0x1b000086   0x1b000086   0x00000006   Code   RO          803    .ARM.Collect$$_printf_percent$$00000016  c_w.l(_printf_ls.o)
    0x1b00008c   0x1b00008c   0x00000004   Code   RO          856    .ARM.Collect$$_printf_percent$$00000017  c_w.l(_printf_percent_end.o)
    0x1b000090   0x1b000090   0x00000002   Code   RO         1208    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x1b000092   0x1b000092   0x00000000   Code   RO         1049    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x1b000092   0x1b000092   0x00000004   Code   RO         1050    .ARM.Collect$$libshutdown$$00000003  c_w.l(libshutdown2.o)
    0x1b000096   0x1b000096   0x00000000   Code   RO         1051    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x1b000096   0x1b000096   0x00000000   Code   RO         1054    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x1b000096   0x1b000096   0x00000000   Code   RO         1057    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x1b000096   0x1b000096   0x00000000   Code   RO         1059    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x1b000096   0x1b000096   0x00000004   Code   RO         1060    .ARM.Collect$$libshutdown$$0000000D  c_w.l(libshutdown2.o)
    0x1b00009a   0x1b00009a   0x00000000   Code   RO         1062    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x1b00009a   0x1b00009a   0x00000002   Code   RO         1063    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x1b00009c   0x1b00009c   0x00000002   Code   RO         1074    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x1b00009e   0x1b00009e   0x00000000   Code   RO         1135    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x1b00009e   0x1b00009e   0x00000004   Code   RO         1136    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x1b0000a2   0x1b0000a2   0x00000006   Code   RO         1137    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x1b0000a8   0x1b0000a8   0x0000008a   Code   RO          698    .text               c_w.l(rt_memcpy_v6.o)
    0x1b000132   0x1b000132   0x00000006   PAD
    0x1b000138   0x1b000138   0x0000007c   Code   RO          704    .text               c_w.l(strcmpv7em.o)
    0x1b0001b4   0x1b0001b4   0x0000004e   Code   RO          719    .text               c_w.l(_printf_pad.o)
    0x1b000202   0x1b000202   0x00000024   Code   RO          721    .text               c_w.l(_printf_truncate.o)
    0x1b000226   0x1b000226   0x00000052   Code   RO          723    .text               c_w.l(_printf_str.o)
    0x1b000278   0x1b000278   0x000000bc   Code   RO          731    .text               c_w.l(_printf_wctomb.o)
    0x1b000334   0x1b000334   0x0000007c   Code   RO          734    .text               c_w.l(_printf_longlong_dec.o)
    0x1b0003b0   0x1b0003b0   0x00000070   Code   RO          740    .text               c_w.l(_printf_oct_int_ll.o)
    0x1b000420   0x1b000420   0x00000094   Code   RO          760    .text               c_w.l(_printf_hex_int_ll_ptr.o)
    0x1b0004b4   0x1b0004b4   0x00000064   Code   RO          812    .text               c_w.l(rt_memcpy_w.o)
    0x1b000518   0x1b000518   0x000002fc   Code   RO          847    .text               c_w.l(_printf_fp_hex.o)
    0x1b000814   0x1b000814   0x0000002c   Code   RO          852    .text               c_w.l(_printf_char.o)
    0x1b000840   0x1b000840   0x000001c8   Code   RO          869    .text               c_w.l(initio_locked.o)
    0x1b000a08   0x1b000a08   0x00000048   Code   RO          871    .text               c_w.l(_c16rtomb.o)
    0x1b000a50   0x1b000a50   0x00000076   Code   RO          888    .text               c_w.l(h1_free_threads.o)
    0x1b000ac6   0x1b000ac6   0x00000002   PAD
    0x1b000ac8   0x1b000ac8   0x000000e4   Code   RO          944    .text               c_w.l(bigflt0.o)
    0x1b000bac   0x1b000bac   0x000001e2   Code   RO          971    .text               c_w.l(flsbuf.o)
    0x1b000d8e   0x1b000d8e   0x0000004c   Code   RO          978    .text               c_w.l(fclose.o)
    0x1b000dda   0x1b000dda   0x00000068   Code   RO          980    .text               c_w.l(setvbuf_locked.o)
    0x1b000e42   0x1b000e42   0x0000000e   Code   RO          993    .text               c_w.l(defsig_rtred_outer.o)
    0x1b000e50   0x1b000e50   0x0000008a   Code   RO         1087    .text               c_w.l(init_alloc.o)
    0x1b000eda   0x1b000eda   0x00000002   PAD
    0x1b000edc   0x1b000edc   0x000000f8   Code   RO         1109    .text               c_w.l(fseek.o)
    0x1b000fd4   0x1b000fd4   0x00000034   Code   RO         1124    .text               c_w.l(defsig_rtred_inner.o)
    0x1b001008   0x1b001008   0x0000000c   Code   RO         1130    .text               c_w.l(sys_exit.o)
    0x1b001014   0x1b001014   0x00000000   Code   RO         1142    .text               c_w.l(maybetermalloc2.o)
    0x1b001014   0x1b001014   0x00000012   Code   RO         1147    .text               c_w.l(h1_init_threads.o)
    0x1b001026   0x1b001026   0x00000032   Code   RO         1165    .text               c_w.l(defsig_general.o)
    0x1b001058   0x1b001058   0x0000000e   Code   RO         1180    .text               c_w.l(sys_wrch.o)
    0x1b001066   0x1b001066   0x00000000   Code   RO         1190    .text               c_w.l(indicate_semi.o)
    0x1b001066   0x1b001066   0x00000010   Code   RO         1200    .text               c_w.l(term_alloc.o)
    0x1b001076   0x1b001076   0x00000002   PAD
    0x1b001078   0x1b001078   0x00000050   Code   RO         1202    .text               c_w.l(defsig_rtmem_inner.o)
    0x1b0010c8   0x1b0010c8   0x0000003e   Code   RO          135    .text.GPIO_PinWrite  gpio_lpc43xx.o
    0x1b001106   0x1b001106   0x00000002   PAD
    0x1b001108   0x1b001108   0x00000106   Code   RO          186    .text.GetClkSel     system_lpc43xx.o
    0x1b00120e   0x1b00120e   0x00000002   PAD
    0x1b001210   0x1b001210   0x00000144   Code   RO          182    .text.GetClockFreq  system_lpc43xx.o
    0x1b001354   0x1b001354   0x00000082   Code   RO          184    .text.GetPLL1Param  system_lpc43xx.o
    0x1b0013d6   0x1b0013d6   0x00000002   PAD
    0x1b0013d8   0x1b0013d8   0x00000042   Code   RO           99    .text.ITM_SendChar  retarget_io.o
    0x1b00141a   0x1b00141a   0x00000002   PAD
    0x1b00141c   0x1b00141c   0x00000058   Code   RO            6    .text.Init_TIMER0   main.o
    0x1b001474   0x1b001474   0x0000003c   Code   RO           35    .text.LED_Off       led_mcb4300.o
    0x1b0014b0   0x1b0014b0   0x00000008   Code   RO          672    .text.OS_Tick_AcknowledgeIRQ  RTX_CM4F.lib(os_systick.o)
    0x1b0014b8   0x1b0014b8   0x00000006   Code   RO          674    .text.OS_Tick_GetIRQn  RTX_CM4F.lib(os_systick.o)
    0x1b0014be   0x1b0014be   0x00000002   PAD
    0x1b0014c0   0x1b0014c0   0x00000040   Code   RO          666    .text.OS_Tick_Setup  RTX_CM4F.lib(os_systick.o)
    0x1b001500   0x1b001500   0x0000000c   Code   RO          265    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_kernel.o)
    0x1b00150c   0x1b00150c   0x00000006   Code   RO          405    .text.OUTLINED_FUNCTION_0  RTX_CM4F.lib(rtx_thread.o)
    0x1b001512   0x1b001512   0x00000002   PAD
    0x1b001514   0x1b001514   0x0000004e   Code   RO          150    .text.SCU_PinConfigure  scu_lpc43xx.o
    0x1b001562   0x1b001562   0x00000002   PAD
    0x1b001564   0x1b001564   0x000001f8   Code   RO          192    .text.SetClock      system_lpc43xx.o
    0x1b00175c   0x1b00175c   0x00000054   Code   RO          190    .text.SystemInit    system_lpc43xx.o
    0x1b0017b0   0x1b0017b0   0x000007b0   Code   RO          194    .text.SystemInit_ExtMemCtl  system_lpc43xx.o
    0x1b001f60   0x1b001f60   0x0000003c   Code   RO            4    .text.Thread        main.o
    0x1b001f9c   0x1b001f9c   0x0000001c   Code   RO           73    .text._mutex_release  rtx_lib.o
    0x1b001fb8   0x1b001fb8   0x00000048   Code   RO          117    .text._sys_flen     retarget_io.o
    0x1b002000   0x1b002000   0x00000048   Code   RO          113    .text._sys_istty    retarget_io.o
    0x1b002048   0x1b002048   0x00000076   Code   RO          107    .text._sys_write    retarget_io.o
    0x1b0020be   0x1b0020be   0x00000002   PAD
    0x1b0020c0   0x1b0020c0   0x00000032   Code   RO           14    .text.main          main.o
    0x1b0020f2   0x1b0020f2   0x00000002   PAD
    0x1b0020f4   0x1b0020f4   0x00000080   Code   RO          598    .text.osMessageQueuePut  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1b002174   0x1b002174   0x00000024   Code   RO          485    .text.osMutexNew    RTX_CM4F.lib(rtx_mutex.o)
    0x1b002198   0x1b002198   0x00000024   Code   RO          491    .text.osMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x1b0021bc   0x1b0021bc   0x0000002e   Code   RO           52    .text.osRtxErrorNotify  rtx_config.o
    0x1b0021ea   0x1b0021ea   0x00000042   Code   RO          528    .text.osRtxMemoryFree  RTX_CM4F.lib(rtx_memory.o)
    0x1b00222c   0x1b00222c   0x0000004a   Code   RO          542    .text.osRtxMemoryPoolFree  RTX_CM4F.lib(rtx_mempool.o)
    0x1b002276   0x1b002276   0x00000038   Code   RO          538    .text.osRtxMemoryPoolInit  RTX_CM4F.lib(rtx_mempool.o)
    0x1b0022ae   0x1b0022ae   0x000000aa   Code   RO          622    .text.osRtxMessageQueuePostProcess  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1b002358   0x1b002358   0x00000020   Code   RO          590    .text.osRtxMessageQueueTimerSetup  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1b002378   0x1b002378   0x00000048   Code   RO          481    .text.osRtxMutexOwnerRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x1b0023c0   0x1b0023c0   0x00000034   Code   RO          297    .text.osRtxThreadBlock  RTX_CM4F.lib(rtx_thread.o)
    0x1b0023f4   0x1b0023f4   0x0000003c   Code   RO          301    .text.osRtxThreadDelayRemove  RTX_CM4F.lib(rtx_thread.o)
    0x1b002430   0x1b002430   0x00000020   Code   RO          389    .text.osRtxThreadDestroy  RTX_CM4F.lib(rtx_thread.o)
    0x1b002450   0x1b002450   0x00000050   Code   RO          295    .text.osRtxThreadDispatch  RTX_CM4F.lib(rtx_thread.o)
    0x1b0024a0   0x1b0024a0   0x00000054   Code   RO          381    .text.osRtxThreadFree  RTX_CM4F.lib(rtx_thread.o)
    0x1b0024f4   0x1b0024f4   0x00000012   Code   RO          281    .text.osRtxThreadListGet  RTX_CM4F.lib(rtx_thread.o)
    0x1b002506   0x1b002506   0x0000002c   Code   RO          279    .text.osRtxThreadListPut  RTX_CM4F.lib(rtx_thread.o)
    0x1b002532   0x1b002532   0x00000014   Code   RO          285    .text.osRtxThreadListRemove  RTX_CM4F.lib(rtx_thread.o)
    0x1b002546   0x1b002546   0x00000026   Code   RO          283    .text.osRtxThreadListSort  RTX_CM4F.lib(rtx_thread.o)
    0x1b00256c   0x1b00256c   0x00000014   Code   RO          291    .text.osRtxThreadRegPtr  RTX_CM4F.lib(rtx_thread.o)
    0x1b002580   0x1b002580   0x00000038   Code   RO          307    .text.osRtxThreadStartup  RTX_CM4F.lib(rtx_thread.o)
    0x1b0025b8   0x1b0025b8   0x0000000c   Code   RO          293    .text.osRtxThreadSwitch  RTX_CM4F.lib(rtx_thread.o)
    0x1b0025c4   0x1b0025c4   0x00000030   Code   RO          299    .text.osRtxThreadWaitExit  RTX_CM4F.lib(rtx_thread.o)
    0x1b0025f4   0x1b0025f4   0x00000020   Code   RO          443    .text.osRtxTimerThread  RTX_CM4F.lib(rtx_timer.o)
    0x1b002614   0x1b002614   0x00000070   Code   RO          441    .text.osRtxTimerTick  RTX_CM4F.lib(rtx_timer.o)
    0x1b002684   0x1b002684   0x0000000c   Code   RO          339    .text.osThreadExit  RTX_CM4F.lib(rtx_thread.o)
    0x1b002690   0x1b002690   0x00000024   Code   RO          311    .text.osThreadNew   RTX_CM4F.lib(rtx_thread.o)
    0x1b0026b4   0x1b0026b4   0x00000016   Code   RO          427    .text.svcRtxDelay   RTX_CM4F.lib(rtx_delay.o)
    0x1b0026ca   0x1b0026ca   0x00000002   PAD
    0x1b0026cc   0x1b0026cc   0x0000008c   Code   RO          251    .text.svcRtxKernelStart  RTX_CM4F.lib(rtx_kernel.o)
    0x1b002758   0x1b002758   0x000000cc   Code   RO          634    .text.svcRtxMessageQueueGet  RTX_CM4F.lib(rtx_msgqueue.o)
    0x1b002824   0x1b002824   0x00000090   Code   RO          501    .text.svcRtxMutexAcquire  RTX_CM4F.lib(rtx_mutex.o)
    0x1b0028b4   0x1b0028b4   0x000000b0   Code   RO          507    .text.svcRtxMutexDelete  RTX_CM4F.lib(rtx_mutex.o)
    0x1b002964   0x1b002964   0x000000b4   Code   RO          503    .text.svcRtxMutexRelease  RTX_CM4F.lib(rtx_mutex.o)
    0x1b002a18   0x1b002a18   0x0000002a   Code   RO          951    CL$$btod_ediv       c_w.l(btod.o)
    0x1b002a42   0x1b002a42   0x0000002a   Code   RO          950    CL$$btod_emul       c_w.l(btod.o)
    0x1b002a6c   0x1b002a6c   0x0000000a   Ven    RO         1286    Veneer$$Code        anon$$obj.o
    0x1b002a76   0x1b002a76   0x0000000a   Ven    RO         1287    Veneer$$Code        anon$$obj.o
    0x1b002a80   0x1b002a80   0x0000000a   Ven    RO         1288    Veneer$$Code        anon$$obj.o
    0x1b002a8a   0x1b002a8a   0x0000000a   Ven    RO         1289    Veneer$$Code        anon$$obj.o
    0x1b002a94   0x1b002a94   0x0000000a   Ven    RO         1290    Veneer$$Code        anon$$obj.o
    0x1b002a9e   0x1b002a9e   0x0000000a   Ven    RO         1291    Veneer$$Code        anon$$obj.o
    0x1b002aa8   0x1b002aa8   0x0000000a   Ven    RO         1292    Veneer$$Code        anon$$obj.o
    0x1b002ab2   0x1b002ab2   0x0000000a   Ven    RO         1293    Veneer$$Code        anon$$obj.o
    0x1b002abc   0x1b002abc   0x0000000a   Ven    RO         1294    Veneer$$Code        anon$$obj.o
    0x1b002ac6   0x1b002ac6   0x0000000a   Ven    RO         1295    Veneer$$Code        anon$$obj.o
    0x1b002ad0   0x1b002ad0   0x0000000a   Ven    RO         1296    Veneer$$Code        anon$$obj.o
    0x1b002ada   0x1b002ada   0x0000000a   Ven    RO         1297    Veneer$$Code        anon$$obj.o
    0x1b002ae4   0x1b002ae4   0x0000000a   Ven    RO         1298    Veneer$$Code        anon$$obj.o
    0x1b002aee   0x1b002aee   0x0000000a   Ven    RO         1299    Veneer$$Code        anon$$obj.o
    0x1b002af8   0x1b002af8   0x0000000a   Ven    RO         1300    Veneer$$Code        anon$$obj.o
    0x1b002b02   0x1b002b02   0x0000000a   Ven    RO         1301    Veneer$$Code        anon$$obj.o
    0x1b002b0c   0x1b002b0c   0x0000000a   Ven    RO         1302    Veneer$$Code        anon$$obj.o
    0x1b002b16   0x1b002b16   0x0000000a   Ven    RO         1303    Veneer$$Code        anon$$obj.o
    0x1b002b20   0x1b002b20   0x0000000a   Ven    RO         1304    Veneer$$Code        anon$$obj.o
    0x1b002b2a   0x1b002b2a   0x0000000a   Ven    RO         1305    Veneer$$Code        anon$$obj.o
    0x1b002b34   0x1b002b34   0x0000000a   Ven    RO         1306    Veneer$$Code        anon$$obj.o
    0x1b002b3e   0x1b002b3e   0x0000000a   Ven    RO         1307    Veneer$$Code        anon$$obj.o
    0x1b002b48   0x1b002b48   0x0000000a   Ven    RO         1308    Veneer$$Code        anon$$obj.o
    0x1b002b52   0x1b002b52   0x0000000a   Ven    RO         1309    Veneer$$Code        anon$$obj.o
    0x1b002b5c   0x1b002b5c   0x0000000a   Ven    RO         1310    Veneer$$Code        anon$$obj.o
    0x1b002b66   0x1b002b66   0x0000000a   Ven    RO         1311    Veneer$$Code        anon$$obj.o
    0x1b002b70   0x1b002b70   0x0000000a   Ven    RO         1312    Veneer$$Code        anon$$obj.o
    0x1b002b7a   0x1b002b7a   0x0000000a   Ven    RO         1313    Veneer$$Code        anon$$obj.o
    0x1b002b84   0x1b002b84   0x0000000a   Ven    RO         1314    Veneer$$Code        anon$$obj.o
    0x1b002b8e   0x1b002b8e   0x0000000a   Ven    RO         1315    Veneer$$Code        anon$$obj.o
    0x1b002b98   0x1b002b98   0x0000000a   Ven    RO         1316    Veneer$$Code        anon$$obj.o
    0x1b002ba2   0x1b002ba2   0x0000000a   Ven    RO         1317    Veneer$$Code        anon$$obj.o
    0x1b002bac   0x1b002bac   0x0000000a   Ven    RO         1318    Veneer$$Code        anon$$obj.o
    0x1b002bb6   0x1b002bb6   0x0000000a   Ven    RO         1319    Veneer$$Code        anon$$obj.o
    0x1b002bc0   0x1b002bc0   0x0000000a   Ven    RO         1320    Veneer$$Code        anon$$obj.o
    0x1b002bca   0x1b002bca   0x0000000a   Ven    RO         1321    Veneer$$Code        anon$$obj.o
    0x1b002bd4   0x1b002bd4   0x0000000a   Ven    RO         1322    Veneer$$Code        anon$$obj.o
    0x1b002bde   0x1b002bde   0x0000000a   Ven    RO         1323    Veneer$$Code        anon$$obj.o
    0x1b002be8   0x1b002be8   0x0000000a   Ven    RO         1324    Veneer$$Code        anon$$obj.o
    0x1b002bf2   0x1b002bf2   0x0000000a   Ven    RO         1325    Veneer$$Code        anon$$obj.o
    0x1b002bfc   0x1b002bfc   0x0000000a   Ven    RO         1326    Veneer$$Code        anon$$obj.o
    0x1b002c06   0x1b002c06   0x0000000a   Ven    RO         1327    Veneer$$Code        anon$$obj.o
    0x1b002c10   0x1b002c10   0x0000000a   Ven    RO         1328    Veneer$$Code        anon$$obj.o
    0x1b002c1a   0x1b002c1a   0x0000000a   Ven    RO         1329    Veneer$$Code        anon$$obj.o
    0x1b002c24   0x1b002c24   0x0000000a   Ven    RO         1330    Veneer$$Code        anon$$obj.o
    0x1b002c2e   0x1b002c2e   0x0000000a   Ven    RO         1331    Veneer$$Code        anon$$obj.o
    0x1b002c38   0x1b002c38   0x0000000a   Ven    RO         1332    Veneer$$Code        anon$$obj.o
    0x1b002c42   0x1b002c42   0x0000000a   Ven    RO         1333    Veneer$$Code        anon$$obj.o
    0x1b002c4c   0x1b002c4c   0x0000000a   Ven    RO         1334    Veneer$$Code        anon$$obj.o
    0x1b002c56   0x1b002c56   0x0000000a   Ven    RO         1335    Veneer$$Code        anon$$obj.o
    0x1b002c60   0x1b002c60   0x0000000a   Ven    RO         1336    Veneer$$Code        anon$$obj.o
    0x1b002c6a   0x1b002c6a   0x0000000a   Ven    RO         1337    Veneer$$Code        anon$$obj.o
    0x1b002c74   0x1b002c74   0x0000000a   Ven    RO         1338    Veneer$$Code        anon$$obj.o
    0x1b002c7e   0x1b002c7e   0x0000000a   Ven    RO         1339    Veneer$$Code        anon$$obj.o
    0x1b002c88   0x1b002c88   0x0000000a   Ven    RO         1340    Veneer$$Code        anon$$obj.o
    0x1b002c92   0x1b002c92   0x0000000a   Ven    RO         1341    Veneer$$Code        anon$$obj.o
    0x1b002c9c   0x1b002c9c   0x0000000a   Ven    RO         1342    Veneer$$Code        anon$$obj.o
    0x1b002ca6   0x1b002ca6   0x0000000a   Ven    RO         1343    Veneer$$Code        anon$$obj.o
    0x1b002cb0   0x1b002cb0   0x0000000a   Ven    RO         1344    Veneer$$Code        anon$$obj.o
    0x1b002cba   0x1b002cba   0x00000030   Code   RO         1069    i.__ARM_fpclassify  m_wm.l(fpclassify.o)
    0x1b002cea   0x1b002cea   0x0000001c   Code   RO          860    i.fputc             c_w.l(fputc.o)
    0x1b002d06   0x1b002d06   0x00000002   PAD
    0x1b002d08   0x1b002d08   0x0000002c   Code   RO          985    locale$$code        c_w.l(lc_numeric_c.o)
    0x1b002d34   0x1b002d34   0x0000001a   Code   RO          710    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x1b002d4e   0x1b002d4e   0x00000004   Code   RO          814    x$fpl$printf1       fz_wm.l(printf1.o)
    0x1b002d52   0x1b002d52   0x00000000   Code   RO         1068    x$fpl$usenofp       fz_wm.l(usenofp.o)
    0x1b002d52   0x1b002d52   0x00000028   Data   RO          761    .constdata          c_w.l(_printf_hex_int_ll_ptr.o)
    0x1b002d7a   0x1b002d7a   0x00000002   PAD
    0x1b002d7c   0x1b002d7c   0x00000070   Data   RO           81    .rodata             rtx_lib.o
    0x1b002dec   0x1b002dec   0x00000038   Data   RO           84    .rodata             rtx_lib.o
    0x1b002e24   0x1b002e24   0x00000010   Data   RO           42    .rodata.LED_GPIO    led_mcb4300.o
    0x1b002e34   0x1b002e34   0x00000040   Data   RO           41    .rodata.LED_PIN     led_mcb4300.o
    0x1b002e74   0x1b002e74   0x00000007   Data   RO          120    .rodata.__stdin_name  retarget_io.o
    0x1b002e7b   0x1b002e7b   0x00000001   PAD
    0x1b002e7c   0x1b002e7c   0x00000024   Data   RO           78    .rodata.os_idle_thread_attr  rtx_lib.o
    0x1b002ea0   0x1b002ea0   0x00000018   Data   RO           80    .rodata.os_timer_mq_attr  rtx_lib.o
    0x1b002eb8   0x1b002eb8   0x00000024   Data   RO           79    .rodata.os_timer_thread_attr  rtx_lib.o
    0x1b002edc   0x1b002edc   0x00000017   Data   RO          123    .rodata.str1.1      retarget_io.o
    0x1b002ef3   0x1b002ef3   0x00000001   PAD
    0x1b002ef4   0x1b002ef4   0x0000000b   Data   RO          269    .rodata.str1.4      RTX_CM4F.lib(rtx_kernel.o)
    0x1b002eff   0x1b002eff   0x00000001   PAD
    0x1b002f00   0x1b002f00   0x00000110   Data   RO         1117    locale$$data        c_w.l(lc_ctype_c.o)


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       272          0          0          0          0       6025   gpio_lpc43xx.o
       234          0         80          0          0       2145   led_mcb4300.o
       378          0          4          0          8       7604   main.o
       632          0         46          0          0       3012   retarget_io.o
        54          6          0          0          0        726   rtx_config.o
       362          0        268          0      34621       7578   rtx_lib.o
        78          0          0          0          0       7063   scu_lpc43xx.o
        64         26        768          0       1536        880   startup_lpc43xx.o
      3386         36         20          4          0      18688   system_lpc43xx.o

    ----------------------------------------------------------------------
      6598         68       1252          4      36168      53721   Object Totals
      1100          0         64          0          0          0   (incl. Generated)
        38          0          2          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       200         12          0          0          0        634   irq_armv7m.o
       122         28          0          0          1       3199   os_systick.o
        58          4          0          0          0       2797   rtx_delay.o
       560         48         11        164          0      16781   rtx_kernel.o
       228          0          0          0          0       2590   rtx_memory.o
       188          0          0          0          0      16188   rtx_mempool.o
      1296         24          0          0          0      18765   rtx_msgqueue.o
       892         32          0          0          0      10068   rtx_mutex.o
       364         14          0          0          0       5444   rtx_system.o
      1768         52          0          0          0      32486   rtx_thread.o
       240          8          0          0          0      10433   rtx_timer.o
         8          0          0          0          0         68   __main.o
       392          4         17          0          0         92   __printf_flags_ss_wp.o
        14          0          0          0          0         68   __printf_wp.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        94          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        72          0          0          0          0         96   _c16rtomb.o
         6          0          0          0          0          0   _printf_a.o
         6          0          0          0          0          0   _printf_c.o
        44          0          0          0          0        108   _printf_char.o
        48          6          0          0          0         96   _printf_char_common.o
        64          6          0          0          0         84   _printf_char_file_locked.o
        40          0          0          0          0         68   _printf_charcount.o
         6          0          0          0          0          0   _printf_d.o
       120         16          0          0          0         92   _printf_dec.o
         6          0          0          0          0          0   _printf_e.o
         6          0          0          0          0          0   _printf_f.o
      1052          0          0          0          0        148   _printf_fp_dec.o
       764          8         38          0          0        100   _printf_fp_hex.o
       128         16          0          0          0         84   _printf_fp_infnan.o
         6          0          0          0          0          0   _printf_g.o
       148          4         40          0          0        160   _printf_hex_int_ll_ptr.o
         6          0          0          0          0          0   _printf_i.o
       178          0          0          0          0         88   _printf_intcommon.o
        10          0          0          0          0          0   _printf_l.o
         6          0          0          0          0          0   _printf_lc.o
        10          0          0          0          0          0   _printf_ll.o
         6          0          0          0          0          0   _printf_lld.o
         6          0          0          0          0          0   _printf_lli.o
         6          0          0          0          0          0   _printf_llo.o
         6          0          0          0          0          0   _printf_llu.o
         6          0          0          0          0          0   _printf_llx.o
       124         16          0          0          0         92   _printf_longlong_dec.o
         6          0          0          0          0          0   _printf_ls.o
         6          0          0          0          0          0   _printf_n.o
         6          0          0          0          0          0   _printf_o.o
       112          8          0          0          0        124   _printf_oct_int_ll.o
         6          0          0          0          0          0   _printf_p.o
        78          0          0          0          0        108   _printf_pad.o
         0          0          0          0          0          0   _printf_percent.o
         4          0          0          0          0          0   _printf_percent_end.o
         6          0          0          0          0          0   _printf_s.o
        82          0          0          0          0         80   _printf_str.o
        36          0          0          0          0         84   _printf_truncate.o
         6          0          0          0          0          0   _printf_u.o
        44          0          0          0          0        108   _printf_wchar.o
       188          6          8          0          0         92   _printf_wctomb.o
         6          0          0          0          0          0   _printf_x.o
       228          4        148          0          0         96   bigflt0.o
      1936        128          0          0          0        668   btod.o
        10          0          0          0          0         68   defsig_exit.o
        50          0          0          0          0         88   defsig_general.o
        80         58          0          0          0         76   defsig_rtmem_inner.o
        14          0          0          0          0         80   defsig_rtmem_outer.o
        52         38          0          0          0         76   defsig_rtred_inner.o
        14          0          0          0          0         80   defsig_rtred_outer.o
        18          0          0          0          0         80   exit.o
        76          0          0          0          0         88   fclose.o
       482          0          0          0          0         92   flsbuf.o
       332         10          0          0          0        152   fopen_locked.o
        28          0          0          0          0         68   fputc.o
       248          6          0          0          0         84   fseek.o
        66          0          0          0          0         76   ftell.o
       166          0          0          0          0        144   h1_alloc_threads.o
        82          0          0          0          0        104   h1_extend_threads.o
        10          0          0          0          0         76   h1_final_threads.o
       118          0          0          0          0        108   h1_free_threads.o
        18          0          0          0          0         84   h1_init_threads.o
         6          0          0          0          0        152   heapauxi.o
         4          0          0          0          0        136   hguard.o
         0          0          0          0          0          0   indicate_semi.o
       138          0          0          0          0        168   init_alloc.o
       456         48          0          0          0        116   initio_locked.o
        44         10        272          0          0         76   lc_ctype_c.o
        44         10         28          0          0         76   lc_numeric_c.o
         2          0          0          0          0          0   libinit.o
        46          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
        10          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         80   lludiv10.o
       240          0          0          0          0        100   lludivv7m.o
         0          0          0          0          0          0   maybetermalloc2.o
        24          4          0          0          0         84   printf.o
        16          4          0          0          0         76   rt_ctype_table.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_heap_descriptor_twolibspace.o
        10          0          0          0          0         76   rt_locale_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       104          0          0          0          0         88   setvbuf_locked.o
       264          6          0          0          0        160   stdio.o
         0          0          0         12        252          0   stdio_streams.o
       124          0          0          0          0         88   strcmpv7em.o
         0          0          0          4          0          0   streamlock.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
        14          0          0          0          0         76   sys_wrch.o
        16          0          0          0          0         80   term_alloc.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o
         4          0          0          0          0        116   printf1.o
         4          0          0          0          0        116   printf2.o
         0          0          0          0          0          0   usenofp.o
        48          0          0          0          0        124   fpclassify.o

    ----------------------------------------------------------------------
     16324        654        566        180        352     126641   Library Totals
        36          0          4          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5916        222         11        164          1     119385   RTX_CM4F.lib
     10290        432        551         16        348       6784   c_w.l
        34          0          0          0          0        348   fz_wm.l
        48          0          0          0          0        124   m_wm.l

    ----------------------------------------------------------------------
     16324        654        566        180        352     126641   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     22922        722       1818        184      36520     176198   Grand Totals
     22922        722       1818        184      36520     176198   ELF Image Totals
     22922        722       1818        184          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                24740 (  24.16kB)
    Total RW  Size (RW Data + ZI Data)             36704 (  35.84kB)
    Total ROM Size (Code + RO Data + RW Data)      24924 (  24.34kB)

==============================================================================

